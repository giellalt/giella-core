## Process this file with automake to produce Makefile.in
## Copyright: SÃ¡mediggi/Divvun/UiT
## Licence: GPL v3+

# Variables:
ALLINONE_MD_PAGE=$(srcdir)/$(GTLANG).md
LINKS=$(srcdir)/Links.md
HEADER=$(srcdir)/index-header.md
INDEX=$(srcdir)/index.md

# no regenerations while debugging
doc_DATA=$(INDEX) $(LINKS) $(ALLINONE_MD_PAGE)

.PHONY: generate-markdown regenerate-markdown

regenerate-markdown: generate-markdown

DOCC2MDWIKI=$(GTCORE)/scripts/doccomments2ghpages.awk
JSPWIKI2MD=$(GTCORE)/scripts/jspwiki2md.awk

GRAPHPLOTTER=$(GTCORE)/scripts/plot-speller-progress.R

if WANT_SPELLERS
speller-report.svg: speller-report.tsv $(GRAPHPLOTTER)
	$(AM_V_GEN)"$(R)" --no-save < $(GRAPHPLOTTER)

speller-report.tsv: spell-tests.tsv $(top_builddir)/tools/spellcheckers/$(GTLANG2).zhfst
	$(AM_V_GEN)$(DIVVUN_ACCURACY) $< $(top_builddir)/tools/spellcheckers/$(GTLANG2).zhfst -t $@

report.json: spell-tests.tsv $(top_builddir)/tools/spellcheckers/$(GTLANG2).zhfst
	$(AM_V_GEN)$(DIVVUN_ACCURACY) $< $(top_builddir)/tools/spellcheckers/$(GTLANG2).zhfst -o $@

spell-tests.tsv:
	$(AM_V_GEN)cut -f 1,2 `find $(top_srcdir) -name typos.txt` |\
		egrep -v '^#' > $@

else
speller-report.svg: 
	@echo need to configure --enable-spellers to generate statistics
	touch $@

report.json: 
	@echo need to configure --enable-spellers to generate statistics
	touch $@
endif

$(srcdir)/%-syntax.md: $(top_srcdir)/src/cg3/%.cg3
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%-morphology.md: $(top_srcdir)/src/fst/%.lexc
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%-morphology.md: $(top_srcdir)/src/fst/%.twolc
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%-generated.md: $(top_srcdir)/src/fst/generated_files/%.lexc
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%-stems.md: $(top_srcdir)/src/fst/stems/%.lexc
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%-affixes.md: $(top_srcdir)/src/fst/affixes/%.lexc
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%.md: $(top_srcdir)/src/transcriptions/%.lexc
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

$(srcdir)/%.md: $(top_srcdir)/tools/grammarcheckers/%.cg3
	$(AM_V_AWK)"$(GAWK)" -f $(DOCC2MDWIKI) < $< > $@

generated-markdowns.sources:
	$(AM_V_GEN)fgrep -rl --include '*.lexc' --include '*.twolc' --include '*.twolc' \
		--exclude 'Makefile*' --exclude '*.pmscript' --exclude '*.xfscript'\
		--exclude lexicon.tmp.lexc \
		'!! ' $(top_srcdir)/src/* $(top_srcdir)/tools/* > $@

generated-markdowns.targets: generated-markdowns.sources
	$(AM_V_GEN)for f in `cat $<` ; do \
		x=`basename $$f | sed -e 's/\.\(lexc\|twolc\|cg3\)$$//'` ; \
		case $$f in \
		*fst/stems*) echo $$x-stems.md;;\
		*fst/affixes*) echo $$x-affixes.md;;\
		*fst/generated*) echo $$x-generated.md;;\
		*fst/root*) echo root-morphology.md;;\
		*) echo $$x.md;;\
		esac;\
	done > $@


generate-markdown: generated-markdowns.targets
	$(AM_V_at)for f in `cat $<` ; do \
		$(MAKE) $$f;\
	done

$(ALL_IN_ONE): generate-markdown generated-markdowns.targets
	$(AM_V_GEN)cat `cat generated-markdowns.targets` > $@

$(LINKS): generate-markdown generated-markdowns.targets
	$(AM_V_GEN)cat generated-markdowns.targets |\
				LC_COLLATE=C sed 's/[a-z0-9._-]*/* [&]\(&\)/g' \
				> $@

# FIXME: some temporary stuff to have index page
$(INDEX): $(HEADER) $(LINKS)
	$(AM_V_GEN)cat $^ > $@

%.md: %.jspwiki
	$(AM_V_AWK)"$(GAWK)" -f $(JSPWIKI2MD) < $< > $@

clean-local:
	$(AM_V_at)-rm -rf $(builddir)/build
	$(AM_V_at)-rm -rf $(srcdir)/build

maintainerclean-local:
	$(AM_V_at)-rm -rf $(ALLINONE_MD_PAGE)


include $(top_srcdir)/../giella-core/am-shared/silent_build-include.am
# vim: set ft=automake:
