## Include this file in top-level srcdir to compile FSTs
## Copyright: SÃ¡mediggi/Divvun/UiT
## Licence: GPL v3+

##### BEGIN Hfst target list #####
if CAN_HFST

if WANT_TTS
GT_ANALYSERS+=analyser-tts-gt-output.hfstol \
			  analyser-tts-gt-input.hfstol \
			  generator-tts-gt-norm.hfstol
endif # WANT_TTS

endif # CAN_HFST
##### END Hfst target list #####

##### BEGIN Xerox target list #####
if CAN_XFST

if WANT_TTS
GT_ANALYSERS+=analyser-tts-gt-output.xfst \
			  analyser-tts-gt-input.xfst \
			  generator-tts-gt-norm.xfst
endif # WANT_TTS

endif # CAN_XFST
##### END Xerox target list #####

##### BEGIN Foma target list #####
if CAN_FOMA

if WANT_TTS
GT_ANALYSERS+=analyser-tts-gt-output.foma \
			  analyser-tts-gt-input.foma \
			  generator-tts-gt-norm.foma
endif # WANT_TTS

endif # CAN_FOMA
##### END Foma target list #####

# For TTS processing, we want two cascaded transducers: a filtered lexicon,
# and the lower/input side of the lexicon + twolc rules.
#
# The following is a list of filters we might want to consider in the general
# processing of the lexicon, before creating the input/surface version of the
# FST:
#					filters/remove-area-tags.%                
#					filters/remove-dialect-tags.%             
#					filters/remove-number-string-tags.%       
#					filters/remove-hyphenation-marks.%        
#					filters/remove-orthography-tags.%         
#					filters/remove-Use_GC-strings.%           
#					filters/remove-Use_minusGC-tags.%         
#					filters/remove-Use_minus_PMatch-tags.%    
#					filters/remove-Use_PMatch-strings.%       
#					filters/remove-mwe-tags.%                 

# First we create the filtered lexicon, ie the analysis/output part of the cascade:
.generated/analyser-tts-gt-output.tmp.%: morphology/lexicon.% \
					filters/remove-derivation-position-tags.% \
					filters/rename-POS_before_Der-tags.%      \
					filters/remove-norm-comp-tags.%           \
					filters/remove-use_mt-strings.%           \
					filters/remove-DNorm-tags.%               \
					filters/remove-usage-tags.%               \
					filters/remove-Use_minusTTS-strings.%
	$(AM_V_XFST_TOOL)$(PRINTF) "read regex \
				@\"filters/remove-usage-tags.$*\"               \
			.o. @\"filters/remove-derivation-position-tags.$*\" \
			.o. @\"filters/rename-POS_before_Der-tags.$*\"      \
			.o. @\"filters/remove-norm-comp-tags.$*\"           \
			.o. @\"filters/remove-DNorm-tags.$*\"               \
			.o. @\"filters/remove-use_mt-strings.$*\"           \
			.o. @\"filters/remove-Use_minusTTS-strings.$*\"     \
			.o. @\"$<\"                                         \
			;\n\
		 twosided flag-diacritics\n\
		 save stack $@\n\
		 quit\n" | $(XFST_TOOL)

# Fallback target for going from *.tmp.hfst to *.hfst
#
# Override this if you need language specific processing,
# But remember to inclue the INVERT step at the end.
# Also remember to use more specific target patterns, to override
# this one (more specific patterns always take precedence over
# more general ones)
%-output.hfst: .generated/%-output.tmp.hfst
	$(AM_V_XFST_TOOL)$(PRINTF) "\
		 load stack $<\n\
		 $(INVERT_HFST)\
		 save stack $@\n\
		 quit\n" | $(XFST_TOOL)

# Then we create the input side - lower side of lexicon + twolc/phonology:

# First: fallback for language specific preprocessing:
.generated/%-input.pretmp.hfst: %-output.hfst
	$(AM_V_COMPOSE)\
		  $(HFST_INVERT)      $(MORE_VERBOSITY) $(HFST_FLAGS) $< \
		| $(HFST_PROJECT)     $(MORE_VERBOSITY) $(HFST_FLAGS) -p output \
		| $(HFST_DETERMINIZE) $(MORE_VERBOSITY) $(HFST_FLAGS) \
		| $(HFST_MINIMIZE)    $(MORE_VERBOSITY) $(HFST_FLAGS) \
		-o $@

# Then the actual composition with TWOLC rules:

# HFST
if WANT_REVERSED_INTERSECT
# Do this if reversed intersect is enabled:
.generated/analyser-tts-gt-input.midtmp.hfst: .generated/analyser-tts-gt-input.pretmp.hfst \
					 morphology/.generated/phonology.rev.hfst
	$(AM_V_INTRSCT)\
		  $(HFST_REVERSE)     $(MORE_VERBOSITY) $(HFST_FLAGS) $< \
		| $(HFST_COMPOSE_INTERSECT) $(COMPOSE_INTERSECT_FLAG) \
							  $(MORE_VERBOSITY) $(HFST_FLAGS) \
			-2 morphology/.generated/phonology.rev.hfst \
		| $(HFST_REVERSE)     $(MORE_VERBOSITY) \
		| $(HFST_MINIMIZE)    $(MORE_VERBOSITY) $(HFST_FLAGS) \
		-o $@

else
# Otherwise do this:
.generated/analyser-tts-gt-input.midtmp.hfst: .generated/analyser-tts-gt-input.pretmp.hfst \
					 morphology/phonology.compose.hfst
	$(AM_V_INTRSCT)\
		  $(HFST_COMPOSE_INTERSECT) $(COMPOSE_INTERSECT_FLAG) $< \
							  $(MORE_VERBOSITY) $(HFST_FLAGS) \
			-1 $<
			-2 morphology/phonology.compose.hfst \
		| $(HFST_MINIMIZE)    $(MORE_VERBOSITY) $(HFST_FLAGS) \
		-o $@
endif # WANT_REVERSED_INTERSECT

# XEROX
.generated/analyser-tts-gt-output.tmp.xfst: morphology/lexicon.xfst \
			 morphology/phonology.compose.xfst
	$(AM_V_LEXC)$(PRINTF) \
		"read-source morphology/lexicon.xfst\nread-rules morphology/phonology.compose.xfst\ncompose-result\nsave-result $@\nquit\n" \
		| $(LEXC) $(VERBOSITY)

# Language independent processing for TTS analyser, after
# TWOLC rules have been applied:
# Override locally if needed, but remember to copy all details from
# this target, as needed in each case.
.generated/analyser-tts-gt-input.tmp.%: .generated/analyser-tts-gt-input.midtmp.%          \
					filters/remove-hyphenation-marks.%        \
					filters/remove-infl_deriv-borders.%       \
					filters/remove-word-boundary.%            \
					orthography/inituppercase.compose.%       \
					orthography/spellrelax.compose.%          \
					$(GLT_NFCNFD_FILTER)                      \
					$(GLT_DOWNCASE_FILTER)
	$(AM_V_XFST_TOOL)$(PRINTF) "read regex \
				@\"$<\" \
			    $(GLT_NFCNFD_COMPOSE) \
				$(GLT_DOWNCASE_COMPOSE) \
			.o. @\"filters/remove-hyphenation-marks.$*\"        \
			.o. @\"filters/remove-infl_deriv-borders.$*\"       \
			.o. @\"filters/remove-word-boundary.$*\"            \
			; \n\
			define fst \n\
			set flag-is-epsilon ON\n\
			read regex fst \
			.o. @\"orthography/inituppercase.compose.$*\"       \
			.o. @\"orthography/spellrelax.compose.$*\"          \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST_TOOL)

# Override this if you need language specific processing,
# BUT remember to inclue the INVERT step at the end.
# Also remember to use more specific target patterns, to override
# this one (more specific patterns always take precedence over
# more general ones)
%-input.hfst: .generated/%-input.tmp.hfst
	$(AM_V_XFST_TOOL)$(PRINTF) "\
		 load stack $<\n\
		 $(INVERT_HFST)\
		 determinize\n\
		 minimize\n\
		 save stack $@\n\
		 quit\n" | $(XFST_TOOL)

# The TTS generator is used to generate normalised word forms after
# lemma normalisation. It is of course normative as opposed to the analysers.
.generated/generator-tts-gt-norm.tmp.%: .generated/analyser-raw-gt-desc.%    \
					filters/make-optional-transitivity-tags.% \
					filters/make-optional-homonymy-tags.%     \
					filters/make-optional-hyph-tags.%         \
					filters/make-optional-variant-tags.%      \
					filters/make-optional-semantic-tags.%     \
					filters/make-optional-adv_comp-tags.%     \
					filters/make-optional-area-tags.%         \
					filters/make-optional-dialect-tags.%      \
					filters/make-optional-grammatical-tags.%  \
					filters/remove-Orth_IPA-strings.%         \
					filters/remove-hyphenation-marks.%        \
					filters/remove-infl_deriv-borders.%       \
					filters/remove-word-boundary.%            \
					filters/remove-number-string-tags.%       \
					filters/remove-orig_lang-tags.%           \
					filters/remove-orthography-tags.%         \
					filters/remove-error-strings.%            \
					filters/remove-Use_minusGC-tags.%         \
					filters/remove-Use_GC-strings.%           \
					filters/remove-NG-strings.%               \
					filters/remove-use_marg-strings.%         \
					filters/remove-Use_minus_PMatch-tags.%    \
					filters/remove-Use_PMatch-strings.%       \
					$(GIELLA_INSERT_AREATAG_FILTER)           \
					$(GIELLA_MIXED_AREA_FILTER)               \
					$(GLT_DOWNCASE_FILTER)
	$(AM_V_XFST_TOOL)$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.$*\" \
			.o. @\"filters/make-optional-homonymy-tags.$*\"     \
			.o. @\"filters/make-optional-hyph-tags.$*\"         \
			.o. @\"filters/make-optional-variant-tags.$*\"      \
			.o. @\"filters/make-optional-semantic-tags.$*\"     \
			.o. @\"filters/make-optional-adv_comp-tags.$*\"     \
			.o. @\"filters/make-optional-area-tags.$*\"         \
			.o. @\"filters/make-optional-dialect-tags.$*\"      \
			.o. @\"filters/make-optional-grammatical-tags.$*\"  \
			.o. @\"filters/remove-orig_lang-tags.$*\"           \
			.o. @\"filters/remove-number-string-tags.$*\"       \
			.o. @\"filters/remove-orthography-tags.$*\"         \
			.o. @\"filters/remove-Orth_IPA-strings.$*\"         \
			.o. @\"filters/remove-error-strings.$*\"            \
			.o. @\"filters/remove-use_marg-strings.$*\"         \
			.o. @\"filters/remove-NG-strings.$*\"               \
			.o. @\"filters/remove-Use_minus_PMatch-tags.$*\"    \
			.o. @\"filters/remove-Use_minusGC-tags.$*\"         \
			.o. @\"filters/remove-Use_GC-strings.$*\"           \
			.o. @\"filters/remove-Use_PMatch-strings.$*\"       \
			.o. @\"filters/remove-mwe-tags.$*\"                 \
				$(GIELLA_INSERT_AREATAG_COMPOSE)                \
				$(GIELLA_MIXED_AREA_COMPOSE)                    \
			.o. @\"$<\"                                         \
				$(GLT_DOWNCASE_COMPOSE)                         \
			.o. @\"filters/remove-hyphenation-marks.$*\"        \
			.o. @\"filters/remove-infl_deriv-borders.$*\"       \
			.o. @\"filters/remove-word-boundary.$*\"            \
			; \n\
		 save stack $@\n\
		 quit\n" | $(XFST_TOOL)

# Additional target to support languages with alternative writing systems:
define alt_ws_tts_fsts
.generated/generator-tts-gt-norm.$(1).tmp.%: .generated/generator-raw-gt-desc.% \
					filters/make-optional-transitivity-tags.% \
					filters/make-optional-homonymy-tags.%     \
					filters/make-optional-hyph-tags.%         \
					filters/make-optional-variant-tags.%      \
					filters/make-optional-semantic-tags.%     \
					filters/make-optional-adv_comp-tags.%     \
					filters/make-optional-area-tags.%         \
					filters/make-optional-dialect-tags.%      \
					filters/make-optional-grammatical-tags.%  \
					filters/remove-Orth_IPA-strings.%         \
					filters/remove-hyphenation-marks.%        \
					filters/remove-infl_deriv-borders.%       \
					filters/remove-word-boundary.%            \
					filters/remove-number-string-tags.%       \
					filters/remove-orig_lang-tags.%           \
					filters/remove-orthography-tags.%         \
					filters/remove-error-strings.%            \
					filters/remove-Use_minusGC-tags.%         \
					filters/remove-Use_GC-strings.%           \
					filters/remove-NG-strings.%               \
					filters/remove-use_marg-strings.%         \
					filters/remove-Use_minus_PMatch-tags.%    \
					filters/remove-Use_PMatch-strings.%       \
					orthography/$(DEFAULT_WS)-to-$(1).compose.% \
					$(GIELLA_INSERT_AREATAG_FILTER)           \
					$(GIELLA_MIXED_AREA_FILTER)               \
					$(GLT_DOWNCASE_FILTER)
	$$(AM_V_XFST_TOOL)$$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.$$*\" \
			.o. @\"filters/make-optional-homonymy-tags.$$*\"     \
			.o. @\"filters/make-optional-hyph-tags.$$*\"         \
			.o. @\"filters/make-optional-variant-tags.$$*\"      \
			.o. @\"filters/make-optional-semantic-tags.$$*\"     \
			.o. @\"filters/make-optional-adv_comp-tags.$$*\"     \
			.o. @\"filters/make-optional-area-tags.$$*\"         \
			.o. @\"filters/make-optional-dialect-tags.$$*\"      \
			.o. @\"filters/make-optional-grammatical-tags.$$*\"  \
			.o. @\"filters/remove-orig_lang-tags.$$*\"           \
			.o. @\"filters/remove-number-string-tags.$$*\"       \
			.o. @\"filters/remove-orthography-tags.$$*\"         \
			.o. @\"filters/remove-Orth_IPA-strings.$$*\"         \
			.o. @\"filters/remove-error-strings.$$*\"            \
			.o. @\"filters/remove-use_marg-strings.$$*\"         \
			.o. @\"filters/remove-NG-strings.$$*\"               \
			.o. @\"filters/remove-Use_minus_PMatch-tags.$$*\"    \
			.o. @\"filters/remove-Use_minusGC-tags.$$*\"         \
			.o. @\"filters/remove-Use_GC-strings.$$*\"           \
			.o. @\"filters/remove-Use_PMatch-strings.$$*\"       \
			.o. @\"filters/remove-mwe-tags.$$*\"                 \
				$(GIELLA_INSERT_AREATAG_COMPOSE_DEF)             \
				$(GIELLA_MIXED_AREA_COMPOSE_DEF)                 \
			.o. @\"$$<\"                                         \
				$(GLT_DOWNCASE_COMPOSE_DEF)                      \
			.o. @\"filters/remove-hyphenation-marks.$$*\"        \
			.o. @\"filters/remove-infl_deriv-borders.$$*\"       \
			.o. @\"filters/remove-word-boundary.$$*\"            \
			; \n\
			define fst \n\
			set flag-is-epsilon ON\n\
			read regex fst \
			.o. @\"orthography/$(DEFAULT_WS)-to-$(1).compose.$$*\" \
			; \n\
		 save stack $$@\n\
		 quit\n" | $$(XFST_TOOL)
endef
$(foreach alt_ws,$(ALT_WSS),$(eval $(call alt_ws_tts_fsts,$(alt_ws))))

# Additional target to support languages with alternative orthographies:
define alt_orth_tts_fst
.generated/generator-tts-gt-norm.$(1).tmp.%: .generated/generator-raw-gt-desc.% \
					filters/make-optional-transitivity-tags.% \
					filters/make-optional-homonymy-tags.%     \
					filters/make-optional-hyph-tags.%         \
					filters/make-optional-variant-tags.%      \
					filters/make-optional-semantic-tags.%     \
					filters/make-optional-adv_comp-tags.%     \
					filters/make-optional-area-tags.%         \
					filters/make-optional-dialect-tags.%      \
					filters/make-optional-grammatical-tags.%  \
					filters/remove-Orth_IPA-strings.%         \
					filters/remove-hyphenation-marks.%        \
					filters/remove-infl_deriv-borders.%       \
					filters/remove-word-boundary.%            \
					filters/remove-number-string-tags.%       \
					filters/remove-orig_lang-tags.%           \
					filters/remove-orthography-tags.%         \
					filters/remove-error-strings.%            \
					filters/remove-Use_minusGC-tags.%         \
					filters/remove-Use_GC-strings.%           \
					filters/remove-NG-strings.%               \
					filters/remove-use_marg-strings.%         \
					filters/remove-Use_minus_PMatch-tags.%    \
					filters/remove-Use_PMatch-strings.%       \
					orthography/$(DEFAULT_ORTH)-to-$(1).compose.% \
					$(GIELLA_INSERT_AREATAG_FILTER)           \
					$(GIELLA_MIXED_AREA_FILTER)               \
					$(GLT_DOWNCASE_FILTER)
	$$(AM_V_XFST_TOOL)$$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.$$*\" \
			.o. @\"filters/make-optional-homonymy-tags.$$*\"     \
			.o. @\"filters/make-optional-hyph-tags.$$*\"         \
			.o. @\"filters/make-optional-variant-tags.$$*\"      \
			.o. @\"filters/make-optional-semantic-tags.$$*\"     \
			.o. @\"filters/make-optional-adv_comp-tags.$$*\"     \
			.o. @\"filters/make-optional-area-tags.$$*\"         \
			.o. @\"filters/make-optional-dialect-tags.$$*\"      \
			.o. @\"filters/make-optional-grammatical-tags.$$*\"  \
			.o. @\"filters/remove-orig_lang-tags.$$*\"           \
			.o. @\"filters/remove-number-string-tags.$$*\"       \
			.o. @\"filters/remove-orthography-tags.$$*\"         \
			.o. @\"filters/remove-Orth_IPA-strings.$$*\"         \
			.o. @\"filters/remove-error-strings.$$*\"            \
			.o. @\"filters/remove-use_marg-strings.$$*\"         \
			.o. @\"filters/remove-NG-strings.$$*\"               \
			.o. @\"filters/remove-Use_minus_PMatch-tags.$$*\"    \
			.o. @\"filters/remove-Use_minusGC-tags.$$*\"         \
			.o. @\"filters/remove-Use_GC-strings.$$*\"           \
			.o. @\"filters/remove-Use_PMatch-strings.$$*\"       \
			.o. @\"filters/remove-mwe-tags.$$*\"                 \
				$(GIELLA_INSERT_AREATAG_COMPOSE_DEF)             \
				$(GIELLA_MIXED_AREA_COMPOSE_DEF)                 \
			.o. @\"$$<\"                                         \
				$(GLT_DOWNCASE_COMPOSE_DEF)                      \
			.o. @\"filters/remove-hyphenation-marks.$$*\"        \
			.o. @\"filters/remove-infl_deriv-borders.$$*\"       \
			.o. @\"filters/remove-word-boundary.$$*\"            \
			; \n\
			define fst \n\
			set flag-is-epsilon ON\n\
			read regex fst \
			.o. @\"orthography/$(DEFAULT_ORTH)-to-$(1).compose.$$*\" \
			; \n\
		 save stack $$@\n\
		 quit\n" | $$(XFST_TOOL)

# ... alternatively using a filter from RAW to target:
.generated/generator-tts-gt-norm.$(1).tmp.%: .generated/generator-raw-gt-desc.% \
					filters/make-optional-transitivity-tags.% \
					filters/make-optional-homonymy-tags.%     \
					filters/make-optional-hyph-tags.%         \
					filters/make-optional-variant-tags.%      \
					filters/make-optional-semantic-tags.%     \
					filters/make-optional-adv_comp-tags.%     \
					filters/make-optional-area-tags.%         \
					filters/make-optional-dialect-tags.%      \
					filters/make-optional-grammatical-tags.%  \
					filters/remove-Orth_IPA-strings.%         \
					filters/remove-hyphenation-marks.%        \
					filters/remove-infl_deriv-borders.%       \
					filters/remove-word-boundary.%            \
					filters/remove-number-string-tags.%       \
					filters/remove-orig_lang-tags.%           \
					filters/remove-orthography-tags.%         \
					filters/remove-error-strings.%            \
					filters/remove-Use_minusGC-tags.%         \
					filters/remove-Use_GC-strings.%           \
					filters/remove-NG-strings.%               \
					filters/remove-use_marg-strings.%         \
					filters/remove-Use_minus_PMatch-tags.%    \
					filters/remove-Use_PMatch-strings.%       \
					orthography/raw-to-$(1).compose.%         \
					$(GIELLA_INSERT_AREATAG_FILTER)           \
					$(GIELLA_MIXED_AREA_FILTER)               \
					$(GLT_DOWNCASE_FILTER)
	$$(AM_V_XFST_TOOL)$$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.$$*\" \
			.o. @\"filters/make-optional-homonymy-tags.$$*\"     \
			.o. @\"filters/make-optional-hyph-tags.$$*\"         \
			.o. @\"filters/make-optional-variant-tags.$$*\"      \
			.o. @\"filters/make-optional-semantic-tags.$$*\"     \
			.o. @\"filters/make-optional-adv_comp-tags.$$*\"     \
			.o. @\"filters/make-optional-area-tags.$$*\"         \
			.o. @\"filters/make-optional-dialect-tags.$$*\"      \
			.o. @\"filters/make-optional-grammatical-tags.$$*\"  \
			.o. @\"filters/remove-orig_lang-tags.$$*\"           \
			.o. @\"filters/remove-number-string-tags.$$*\"       \
			.o. @\"filters/remove-orthography-tags.$$*\"         \
			.o. @\"filters/remove-Orth_IPA-strings.$$*\"         \
			.o. @\"filters/remove-error-strings.$$*\"            \
			.o. @\"filters/remove-use_marg-strings.$$*\"         \
			.o. @\"filters/remove-NG-strings.$$*\"               \
			.o. @\"filters/remove-Use_minus_PMatch-tags.$$*\"    \
			.o. @\"filters/remove-Use_minusGC-tags.$$*\"         \
			.o. @\"filters/remove-Use_GC-strings.$$*\"           \
			.o. @\"filters/remove-Use_PMatch-strings.$$*\"       \
			.o. @\"filters/remove-mwe-tags.$$*\"                 \
				$(GIELLA_INSERT_AREATAG_COMPOSE_DEF)             \
				$(GIELLA_MIXED_AREA_COMPOSE_DEF)                 \
			.o. @\"$$<\"                                         \
				$(GLT_DOWNCASE_COMPOSE_DEF)                      \
			.o. @\"filters/remove-hyphenation-marks.$$*\"        \
			.o. @\"filters/remove-infl_deriv-borders.$$*\"       \
			.o. @\"filters/remove-word-boundary.$$*\"            \
			; \n\
			define fst \n\
			set flag-is-epsilon ON\n\
			read regex fst \
			.o. @\"orthography/raw-to-$(1).compose.$$*\"        \
			; \n\
		 save stack $$@\n\
		 quit\n" | $$(XFST_TOOL)
endef
$(foreach alt_orth,$(ALT_ORTHS),$(eval $(call alt_orth_tts_fst,$(alt_orth))))

# Additional target to support languages with geographically bound orthographic
# variation (Area tags); only the normative generator is needed, the descriptive
# analyser will accept (and tag) all areas:
define area_tts_fsts
.generated/generator-tts-gt-norm_$(1).tmp.%: .generated/generator-raw-gt-desc.% \
					filters/make-optional-transitivity-tags.% \
					filters/make-optional-homonymy-tags.%     \
					filters/make-optional-hyph-tags.%         \
					filters/make-optional-variant-tags.%      \
					filters/make-optional-semantic-tags.%     \
					filters/make-optional-adv_comp-tags.%     \
					filters/make-optional-area-tags.%         \
					filters/make-optional-dialect-tags.%      \
					filters/make-optional-grammatical-tags.%  \
					filters/remove-Orth_IPA-strings.%         \
					filters/remove-hyphenation-marks.%        \
					filters/remove-infl_deriv-borders.%       \
					filters/remove-word-boundary.%            \
					filters/remove-number-string-tags.%       \
					filters/remove-orig_lang-tags.%           \
					filters/remove-orthography-tags.%         \
					filters/remove-error-strings.%            \
					filters/remove-NG-strings.%               \
					filters/remove-use_marg-strings.%         \
					filters/remove-Use_minusGC-tags.%         \
					filters/remove-Use_GC-strings.%           \
					filters/remove-Use_minus_PMatch-tags.%    \
					filters/remove-Use_PMatch-strings.%       \
					filters/remove-all_areas_but_$(1)-strings.% \
					$(GLT_DOWNCASE_FILTER)
	$$(AM_V_XFST_TOOL)$$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.$$*\" \
			.o. @\"filters/make-optional-homonymy-tags.$$*\"     \
			.o. @\"filters/make-optional-hyph-tags.$$*\"         \
			.o. @\"filters/make-optional-variant-tags.$$*\"      \
			.o. @\"filters/make-optional-semantic-tags.$$*\"     \
			.o. @\"filters/make-optional-adv_comp-tags.$$*\"     \
			.o. @\"filters/make-optional-area-tags.$$*\"         \
			.o. @\"filters/make-optional-dialect-tags.$$*\"      \
			.o. @\"filters/make-optional-grammatical-tags.$$*\"  \
			.o. @\"filters/remove-orig_lang-tags.$$*\"           \
			.o. @\"filters/remove-number-string-tags.$$*\"       \
			.o. @\"filters/remove-orthography-tags.$$*\"         \
			.o. @\"filters/remove-Orth_IPA-strings.$$*\"         \
			.o. @\"filters/remove-error-strings.$$*\"            \
			.o. @\"filters/remove-use_marg-strings.$$*\"         \
			.o. @\"filters/remove-NG-strings.$$*\"               \
			.o. @\"filters/remove-Use_minus_PMatch-tags.$$*\"    \
			.o. @\"filters/remove-Use_minusGC-tags.$$*\"         \
			.o. @\"filters/remove-Use_GC-strings.$$*\"           \
			.o. @\"filters/remove-Use_PMatch-strings.$$*\"       \
			.o. @\"filters/remove-all_areas_but_$(1)-strings.$$*\" \
			.o. @\"filters/remove-mwe-tags.$$*\"                 \
			.o. @\"$$<\"                                         \
			    $(GLT_DOWNCASE_COMPOSE_DEF) \
			.o. @\"filters/remove-hyphenation-marks.$$*\"        \
			.o. @\"filters/remove-infl_deriv-borders.$$*\"       \
			.o. @\"filters/remove-word-boundary.$$*\"            \
			; \n\
		 save stack $$@\n\
		 quit\n" | $$(XFST_TOOL)
endef
$(foreach area,$(AREAS),$(eval $(call area_tts_fsts,$(area))))
