## Process this file with automake to produce Makefile.in

## Copyright (C) 2011 Samediggi

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

#### Define variables: ####
if HAVE_AREAS
if CAN_HFST
if WANT_SPELLERS

GT_AREA_ERRMODELS=$(shell for ld in $(AREAS); do\
    echo ".generated/errmodel.$$ld.hfst" ; \
done)

GT_AREA_SPELLER_ACCEPTORS=$(shell for ld in $(AREAS); do\
    echo ".generated/acceptor.$$ld.hfst" ; \
done)

AREA_ZHFST_FILES=$(shell for ld in $(AREAS); do\
    echo "$(GTLANG2)_$$ld.zhfst" ; \
done)
AREA_ZHFST_BASENAMES=$(basename $(AREA_ZHFST_FILES))

endif # WANT_SPELLERS
endif # CAN_HFST
endif # HAVE_AREAS

#### Build rules: ####

# Build rule for acceptors for specific areas/countries:
.generated/acceptor.%.hfst: \
		$(GT_SPELLER_HFST) .generated/easteregg.%.desktop.hfst \
		$(top_builddir)/src/fst/filters/remove-all_areas_but_%-strings.hfst
	$(AM_V_GEN)cat $< \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
		  -1 $(top_builddir)/src/fst/filters/remove-all_areas_but_$*-strings.hfst \
		| $(HFST_PROJECT) $(HFST_FLAGS) --project=lower \
		| $(HFST_MINIMIZE_SPELLER) $(HFST_FLAGS)        \
		| $(HFST_DISJUNCT) - easteregg.$*.desktop.hfst             \
		| $(HFST_FST2FST) $(HFST_FLAGS) -f olw          \
		-o $@

# Build rule for zhfst files for specific areas/countries:
$(AREA_ZHFST_FILES): \
	$(GTLANG2)_%.zhfst: \
		index.%.xml \
		.generated/acceptor.%.hfst \
		.generated/errmodel.%.hfst
	$(AM_V_at)rm -f $@
	$(AM_V_at)$(MKDIR_P) build/$@
	$(AM_V_at)rm -f build/$@/*
	$(AM_V_at)cp index.$*.xml build/$@/index.xml
	$(AM_V_at)cp .generated/acceptor.$*.hfst build/$@/acceptor.default.hfst
	$(AM_V_at)cp .generated/errmodel.$*.hfst build/$@/errmodel.default.hfst
	$(AM_V_ZIP)cd build/$@/ && $(ZIP) $(ZIPFLAGS) ../../$@ *
	$(AM_V_at)$(MKDIR_P) 3
	$(AM_V_at)cp -f $@ 3/

# Build rule for 5.0 oxt files for specific areas/countries:
# The more specific pattern match first.
$(GTLANG2)_%_LO-voikko-5.0.oxt: $(AREA_ZHFST_FILES)
	$(AM_V_GEN)rm -f $@; \
		if [ -d "$(OXT_ROOT_DIR)/$(LOVOIKKO_VERSION)" ]; then \
			$(MKDIR_P) build/$(LOVOIKKO_VERSION)/ && \
			cd build/$(LOVOIKKO_VERSION) && \
			$(GET_LIBS_COMMAND) \
					 $(OXT_ROOT_DIR)/$(LOVOIKKO_VERSION)/ $(TARGET_DIR)/ && \
			cp ../../$(GTLANG2)_$*.zhfst voikko/3/ && \
			$(ZIP) -r $(VERBOSITY) $(ZIPFLAGS) ../../$@ * ; \
		else \
			echo "  SKIP     $@: Not yet supported." ; \
		fi

# Build rule for 4.x oxt files for specific areas/countries:
$(GTLANG2)_%.oxt: $(AREA_ZHFST_FILES)
	$(AM_V_GEN)rm -f $@; \
		area="$$(echo $* | cut -d'_' -f1)"; \
		version="$$(echo $* | cut -d'_' -f2 | sed 's/LO-voikko-//')"; \
		if [ -d "$(OXT_ROOT_DIR)/$$version" ]; then \
			$(MKDIR_P) build/$$version/ && \
			cd build/$$version && \
			$(GET_LIBS_COMMAND) \
					 $(OXT_ROOT_DIR)/$$version/ $(TARGET_DIR)/ && \
			cp ../../$(GTLANG2)_$$area.zhfst 3/ && \
			$(ZIP) -r $(VERBOSITY) $(ZIPFLAGS) ../../$@ * ; \
		else \
			echo "  SKIP     $@: Not yet supported." ; \
		fi
