## Process this file with automake to produce Makefile.in

## Copyright (C) 2011 Samediggi

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

####### Add corpus-based weights: #######
# Use: surfweights.CORPUSNAME.hfst and CORPUSNAME.unitweight
SURFWEIGHTS=$(CORPUSNAME).surfweights.hfst
UNITWEIGHT=$(CORPUSNAME).unitweight.txt

# ALPHA for additive smoothing, [0, 1.0] seems good
ALPHA=1.0
#NORMALISED_MAXWEIGHT=1000

corpus_size_limit_command=$(shell \
	if [[ x$(CORPUS_SIZE) != x ]] ; \
	then \
		echo "| head -n $(CORPUS_SIZE)"; \
	else \
		echo ""; \
	fi)

.generated/%.hfst: weights/%.att $(GENDIR)
	$(AM_V_GEN)$(HFST_TXT2FST) $(HFST_FLAGS) -f openfst-tropical $< -o $@

# sort the clean corpus:
.generated/%.sort.txt: weights/%.clean.txt
	$(AM_V_GEN)LC_ALL=C.utf8 sort < $< > $@

# token count:
.generated/%.wordcount.txt: .generated/%.sort.txt
	$(AM_V_GEN)wc -l < $< > $@

# Unique the sorted, clean corpus:
.generated/%.uniq.txt: .generated/%.sort.txt
	$(AM_V_GEN)LC_ALL=C.utf8 uniq -c < $< |\
		LC_ALL=C.utf8 sort -nr $(corpus_size_limit_command) > $@

# type count:
.generated/%.typecount.txt: .generated/%.uniq.txt
	$(AM_V_GEN)wc -l < $< > $@

# calculate unit weight, smoothed using ALPHA:
#%.unitweight.txt: %.wordcount.txt %.typecount.txt
#	$(AM_V_GEN)paste $^ |\
#		sed -e "s/^/scale=5; -l($(ALPHA)\/(/" \
#		    -e "s/	/ + ($(ALPHA) */" -e "s/$$/)))/" \
#		| $(BC) -l > $@

# Alternative unit weight: highest tropical weight + ALPHA:
.generated/%.unitweight.txt: .generated/%.tropical.txt
	$(AM_V_GEN)echo "$$(cut -f2 < $^ | sort -nru | head -n1) + $(ALPHA)" \
		| $(BC) -l > $@

# add tropical weights to the corpus:
.generated/%.tropical.txt: .generated/%.uniq.txt .generated/%.wordcount.txt .generated/%.typecount.txt
	$(AM_V_GEN)cat $< |\
		$(GAWK) -v CS="$$(cat .generated/$*.wordcount.txt)" \
				-v DS="$$(cat .generated/$*.typecount.txt)" \
				-v ALPHA=$(ALPHA)                \
				-f $(GTCORE)/scripts/uniq_count2tropical_weight.awk \
				> $@

# build an fst of surface forms with tropical weights for each word form:
.generated/%.surfs.hfst: .generated/%.tropical.txt
	$(AM_V_STR2FST)cat $< |\
		$(HFST_STRINGS2FST) -j $(HFST_FLAGS) -f openfst-tropical -o $@

# Build an fst with surface form weights that also handles compounds:
.generated/%.surfweights.hfst: .generated/%.surfs.hfst \
                    .generated/word-boundary.hfst
	$(AM_V_HMINIM)$(HFST_MINIMIZE) $(HFST_FLAGS) -i $< -o $@
# Commented out the repetition build step - we only want to promote the compouns
# actually found in the corpus.
#	$(AM_V_HCONCAT)$(HFST_CONCATENATE) $(HFST_FLAGS) word-boundary.hfst $< \
#		| $(HFST_REPEAT) $(HFST_FLAGS) -f 0 -t inf \
#		| $(HFST_CONCATENATE) $< - \
#		| $(HFST_MINIMIZE) -o $@

# Remove word forms covered by the corpus:
.generated/unitweighted_limited.hfst: .generated/generator-%-gt-norm-freq_weighted.hfst \
							$(UW_SPELLER_SRC)
	$(AM_V_FST2FST)$(HFST_FST2FST) --format=foma -i $(UW_SPELLER_SRC) -o $@.tmpfoma.hfst
	$(AM_V_FST2FST)$(HFST_FST2FST) --format=foma -i $< -o $<.tmpfoma.hfst
	$(AM_V_HXFST)$(PRINTF) "read regex \
	~[ @\"$<.tmpfoma.hfst\".u ] \
	.o. @\"$@.tmpfoma.hfst\" \
	; \n\
	save stack $@\n\
	quit\n" | $(HFST_XFST) -p $(MORE_VERBOSITY) --format=foma

# Add the unit weight to each unit in compounds, both dynamic and lexical:
#unitweighted.hfst: unitweighted_limited.hfst
.generated/unitweighted.hfst: $(UW_SPELLER_SRC) \
                   .generated/$(UNITWEIGHT)
	$(AM_V_REWEIGHT)$(HFST_FST2FST) --format=openfst-tropical -i $< \
		| $(HFST_REWEIGHT) $(HFST_FLAGS) \
		-e -a $$(cat .generated/$(UNITWEIGHT)) \
		-o $@

# Keep these intermediate targets when building using --debug:
.SECONDARY: .generated/spellercorpus.sort.txt \
            .generated/spellercorpus.uniq.txt \
            .generated/spellercorpus.surfs.hfst \
            .generated/spellercorpus.tropical.txt \
            .generated/spellercorpus.typecount.txt \
            .generated/pellercorpus.wordcount.txt \
            .generated/word-boundary.hfst \
            .generated/generator-*-gt-norm-freq_weighted.hfst \
            .generated/generator-*-gt-norm-unit_weighted.hfst \
            .generated/generator-*-gt-norm-norm_weighted.hfst \
            .generated/generator-*-gt-norm-tag_weighted.hfst  \
            .generated/$(SURFWEIGHTS) \
            .generated/$(UNITWEIGHT)
