# -*- mode: Makefile -*-

# Makefile to make SLANGTLANG-TNUM.fst

# usage:
# make -f make-muldict
# ==> builds a bilingdict fst from a dict-xxx-mul dictionary using the values for SLANG, TLANG and TNUM declared in the script itself
# 
# to overwrite the defaults 
# make -f make-muldict SLANG=nob TLANG=sma TNUM=all
#
#
#

XFST = xfst
HFST-LEXC = hfst-lexc

JV   = java
MF   = -Xmx2048m
EF   = -it:main
XSL  = net.sf.saxon.Transform

SRC           = src
SCRIPTS       = scripts
L1_L2         = mulextract_l-t-lexc.xsl

# target lang= ISO code
SLANG       = sma
TLANG       = nob
LP          = dict-$(SLANG)-mul
# translation number: values 'first' = use only the first t-element; 'all' = use all t-elements 
TNUM        = all
GOAL        = $(SLANG)$(TLANG)-$(TNUM)
BEGIN       = @echo "*** Generating $@-file ***"
END         = @echo "Done."
CLEAN       = @echo "Cleaning files."

###############

# Todo: 

# hfst
../../$(GOAL).hfst: ../../$(LP)/bin/$(GOAL).hfst # ../../$(GOAL).fst
../../$(LP)/bin/$(GOAL).hfst: ../../$(LP)/bin/$(GOAL).lexc
	@echo
	@echo "*** Building $@ ***"
	@echo
	hfst-lexc  $< -o $@


# xfst, comment this in and hfst out if you want to use xfst
#../../$(GOAL).fst: ../../$(LP)/bin/$(GOAL).fst
#../../$(LP)/bin/$(GOAL).fst: ../../$(LP)/bin/$(GOAL).lexc
#	@echo
#	@echo "*** Building $@ ***"
#	@echo
#	@printf "read lexc $<  \n\
#	invert net  \n\
#	save stack $@ \n\
#	quit \n" > $(GOAL)-fst-script
#	$(XFST)  < $(GOAL)-fst-script
#	@rm -f $(GOAL)-fst-script

../../$(LP)/bin/$(GOAL).lexc: ../../$(LP)/$(SRC) $(SCRIPTS)/$(L1_L2)
	@echo 
	$(BEGIN)
	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/$(L1_L2) SLANG=$(SLANG) TLANG=$(TLANG) TNUM=$(TNUM)
	@echo
	$(END)
	@echo

###############

clean:
	@rm -vf ../../$(LP)/bin/*.txt $(LP)/bin/*.lexc $(LP)/bin/*.fst	 $(LP)/bin/*.hfst	

