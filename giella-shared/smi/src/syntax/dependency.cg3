# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or feedback@divvun.no

# ==================================================================== #
#!! !!!C O M M O N  S Á M I  D E P E N D E N C Y   G R A M M A R
# ==================================================================== #
# ==================================================================== #

#!! This dep file is for sma, sme, smj.

# ========== #
#!! !!!DELIMITERS
# ========== #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" ;
#!! Sentence delimiters are the following: <.> <!> <?> <...> <¶>


#!! !!!TAGS AND SETS

SETS

LIST N = N ;	  #!! N
LIST V = V ;	  #!! V
LIST A = A ;	  #!! A
LIST Adv = Adv ;  #!! Adv
LIST CC = CC ;	  #!! CC
LIST CS = CS ;	  #!! CS
LIST Inf = Inf ;  #!! Inf
LIST Sup = Sup ;  #!! Sup
LIST Neg = Neg ;  #!! Neg
LIST Num = Num ;  #!! Num
LIST Po = Po ;	  #!! Po
LIST Pr = Pr ;	  #!! Pr

LIST Pcle = Pcle ; #!! Pcle
LIST Prop = Prop ; #!! Prop

LIST Pron = Pron ;		 #!! Pron
LIST IV = IV ;			 #!! IV
LIST TV = TV ;			 #!! TV
LIST COMMA = "," ;		 #!! COMMA
LIST DASH = "–" ;		 #!! DASH
LIST CITATION = """ ;    #!! CITATION to keep colouring we add a "
LIST HYPHEN = "-" ;		 #!! HYPHEN
LIST QMARK = "\?" ;		 #!! QMARK
LIST PUNCT = PUNCT ;	 #!! PUNCT
LIST LEFT = LEFT ;		 #!! LEFT
LIST RIGHT = RIGHT ;	 #!! RIGHT
LIST CLB = CLB ;		 #!! CLB
LIST Ind = Ind ;		 #!! Ind
LIST Pot = Pot ;		 #!! Pot
LIST Imprt = Imprt ;	 #!! Impr
LIST ImprtII = ImprtII ; #!! ImprtII
LIST Cond = Cond ;		 #!! Cond
LIST ConNeg = ConNeg ;	 #!! ConNeg
LIST Caus = Caus ;       #!! Caus causative eus
LIST VGen = VGen ;		 #!! VGen
LIST Interj = Interj ;	 #!! Interj
LIST ABBR = ABBR ;		 #!! ABBR
LIST ACR = ACR ;		 #!! ACR
LIST Prs = Prs ;		 #!! Prs
LIST Prt = Prt ;		 #!! Prt
LIST Cmpnd = Cmpnd ;	 #!! Cmpnd
LIST RCmpnd = RCmpnd ;	 #!! RCmpnd
LIST PrfPrc = PrfPrc ;	 #!! PrfPrc
LIST PrsPrc = PrsPrc ;	 #!! PrsPrc
LIST Actor = Actor ;	 #!! Actor
LIST Actio = Actio ;	 #!! Actio
LIST Ger = Ger ;		 #!! Ger
LIST Indef = Indef ;	 #!! Indef
LIST Nom = Nom ;		 #!! Nom
LIST Acc = Acc ;		 #!! Acc
LIST Ill = Ill ;		 #!! Ill
LIST Com = Com ;		 #!! Com
LIST Gen = Gen ;		 #!! Gen
LIST Ess = Ess ;		 #!! Ess

LIST IM = IM ; #!! IM For fao

#!! !!POS sub-categories
# ------------------

LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Interr = Interr ;


LIST Recipr = Recipr ;
LIST Refl = Refl ;
LIST Rel = Rel ;
LIST Qst = Qst ;

LIST Adp = Adp ;
LIST <ctjHead> = <ctjHead> ;


# Derivations (needed?)
# ---------------------

LIST Der/NomAct = Der/NomAct ;







# fao POS and grammar tags

LIST Poss = Poss ;
LIST Dat = Dat ;
LIST Msc = Msc ;
LIST Fem = Fem ;
LIST Neu = Neu ;

LIST Def = Def ;

LIST Sbj = Sbj ;



# kal POS and grammar tags

LIST Abs = Abs ;
LIST Relc = Relc ;
LIST Trm = Trm ;
LIST Abl = Abl ;
LIST Lok = Lok ;
LIST Aeq = Aeq ;
LIST Ins = Ins ;
LIST Via = Via ;

LIST Int = Int ;
LIST Imp = Imp ;

LIST Opt = Opt ;
LIST Cau = Cau ;
LIST Con = Con ;
LIST Par = Par ;

LIST Ite = Ite  ;
LIST Vok = Vok ; # vokativ-lignende endelser på pronominer og participium

LIST 1Sg = 1Sg ;
LIST 2Sg = 2Sg ;
LIST 3Sg = 3Sg ;
LIST 4Sg = 4Sg ;
LIST 1Pl = 1Pl ;
LIST 2Pl = 2Pl ;
LIST 3Pl = 3Pl ;
LIST 4Pl = 4Pl ;

LIST 1234P =  1Sg  2Sg  3Sg  4Sg  1Pl  2Pl  3Pl  4Pl ;

LIST 34IV = 3Sg 3Pl 4Sg 4Pl ;
LIST 34Sg = 3Sg 4Sg ;
LIST 34Pl = 3Pl 4Pl ;

LIST 1SgPoss = 1SgPoss ; #Ny tag 22.1.2008
LIST 2SgPoss = 2SgPoss ; #Ny do.
LIST 3SgPoss = 3SgPoss ; #Ny do.
LIST 4SgPoss = 4SgPoss ; #Ny do.
LIST 1PlPoss = 1PlPoss ; #Ny do.
LIST 2PlPoss = 2PlPoss ; #Ny do.
LIST 3PlPoss = 3PlPoss ; #Ny do.
LIST 4PlPoss = 4PlPoss ; #Ny do.

LIST 1SgO = 1SgO ;
LIST 2SgO = 2SgO ;
LIST 3SgO = 3SgO ;
LIST 4SgO = 4SgO ;
LIST 1PlO = 1PlO ;
LIST 2PlO = 2PlO ;
LIST 3PlO = 3PlO ;
LIST 4PlO = 4PlO ;

LIST nn = nn ;
LIST vv = vv ;
LIST nv = nv ;
LIST vn = vn ;


SET POSSESSUM3 = (N 3SgPoss) | (N 3PlPoss) | (N* 3SgPoss) | (N* 3PlPoss) | (Num 3SgPoss) | (Num 3PlPoss) ;
SET POSSESSUM4 = (N 4SgPoss) | (N 4PlPoss) | (N* 4SgPoss) | (N* 4PlPoss) ;
SET POSSESSUM12 = (N 1SgPoss) | (N 2SgPoss) | (N* 1SgPoss) | (N* 2SgPoss)| (N 1PlPoss) | (N 2PlPoss) | (N* 1PlPoss) | (N* 2PlPoss) ;

SET POSSESSUM = POSSESSUM12 OR POSSESSUM3 OR POSSESSUM4 ;

SET KAL = Int OR Imp OR Opt OR Cau  OR Con OR Par OR 1234P ;



# Other tags
# ----------

LIST BOS = (>>>) (<s>);
LIST EOS = (<<<) (</s>);


LIST WORD = N A Adv V Pron CS CC Po Pr Interj Pcle Num ABBR ACR  \? ;



# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -
LIST V-SG3 = (V Ind Prs Sg3)  (V Ind Prt Sg3) (V Cond Prs Sg3)
             (V Cond Prt Sg3) (V Pot Prs Sg3) (V Neg Ind Sg3);

LIST V-DU3 = (V Ind Prs Du3)  (V Ind Prt Du3) (V Cond Prs Du3)
	         (V Cond Prt Du3) (V Pot Prs Du3) (V Neg Ind Du3);

LIST V-PL3 = (V Ind Prs Pl3)  (V Ind Prt Pl3) (V Cond Prs Pl3)
             (V Cond Prt Pl3) (V Pot Prs Pl3) (V Neg Ind Pl3);

SET V-3  = V-SG3 OR V-DU3 OR V-PL3 ;
 # Note that imperative verbs are not included in these sets!

LIST COPULA = ("vera" V) ("leat" V) ("lea" V) ;
LIST COPULAS = "dáidit" "gártat" "leahkit" "leat" "orrut" "soaitit" "šaddat" "veadjit" ;

LIST MO-MANge-sma = ("guktie" Adv) ("man" Adv) ;

LIST MO-MANge-sme = ("goas" Adv) ("gokko" Adv) ("gos" Adv) ("gosa" Adv) ("govt" Adv)  ("got" Adv) ("makkár" Pron) ("man" Adv) ("manne" Adv) ("mo" Adv) ("mot" Adv) ("movt" Adv) ("nugo" @CVP) ("dego" @CVP) (V Qst);

LIST MO-MANge-smj = ("gåktu" Adv) ("gåktus" Adv) ("gånnå" Adv) ("gåsstå" Adv) ("gåsstås" Adv) ("manen" Adv) ("makkár" Pron) ("man" Adv)(V Qst);

LIST ILL-ADV-sme = ("gosa") ;
LIST LOC-ADV-sme = ("gos") ("goas") ;

LIST DOPPE = "badjin" "bajil" "dakko" "dá" "dákko" "dáppe" "diekko" "dieppe" "do" "dokko" "doppe" "duo" "duokko" "duoppe" "olgun" ;
# Adverbs with a locativic form, but don´t get Loc as a tag.

LIST DOHKO = "bajás" "deike" "diehke" "diehko" "dohko" "duohko" "lulás" "olggos" "ruoktot" "sisa" "vuovdimassii" ;
# Adverbs with a illativic form, but they don´t get Ill as a tag.


SET MO-MANge = MO-MANge-sma OR MO-MANge-sme OR MO-MANge-smj ;
SET ADVL-COMP = MO-MANge - ("man" Foc/ge) ;

LIST ADVL-COMPfao = ("ið" Adv) ("hvi" Adv) ("hagar" Adv) ("tá" Adv) ("hvussu" Adv) ("um" CS) ("áðrenn" CS) ("tí" CS) ("tá_ið" Adv) ;

#SET ADVL-COMP = ADVL-COMPsmi OR ADVL-COMPfao ;

LIST RELHUM = ("guhti" Rel) ("guhte" Rel) ("gii" Rel) ("gie" Rel); # To look for a human antecedent in stead of e.g. placenames

LIST GOSTEGE = ("gostege" Adv) ("ge" Pcle) ("mihkkege" Pron) ("mige" Pron) ;

LIST OBJ-COMPsmi = ("ahte" CS) ("makkár" Pron) ("movt" CS) ;
# Consider adding ("mo" CS) to the OBJ-COMPsmi set, cf.
# "Mii fertet gal árvvoštallat mo mii galgat bargat"
# where the subclause is advl without mo and object with mo in this set

LIST OBJ-COMPfao = ("at" CS) Interr ;
SET OBJ-COMP = OBJ-COMPsmi OR OBJ-COMPfao  ; # these typically introduce a objectsubclause
LIST MCL-CONJ = ("de" CC) ("dellie" CC)("dillie" CC)("dle" CC) ("die" Adv) ("muhto" CC) ("mohte" CC) ("men" CC) ("valla" CC) ; # these typically introduce a main clause, not coordination of subclauses
#LIST MUHTO = ("muhto" CC) ("mohte" CC) ("men" CC) ("valla" CC) ; # these typically introduce a main clause, not coordination

SET DASHHYPHEN = ("-") OR ("–") ;

SET NOT-ADJ = WORD - A ;
SET NOT-COMMA = CLB - COMMA ;

#!! !!Syntactic tags and sets
# =======================

#!! Syntactic tag definitions

LIST @+FAUXV = @+FAUXV ; 	         # finite auxiliary
LIST @+FMAINV = @+FMAINV ; 	         # finite main verb
LIST @-FADVL> = @-FADVL> ; 	         # adverbial of infinite verb outside of the predicate
LIST @-F<ADVL = @-F<ADVL ; 	         # adverbial of infinite verb outside of the predicate
LIST @-FAUXV = @-FAUXV ; 	         # infinite auxiliary verb
LIST @-FMAINV = @-FMAINV ; 	         # infinite main verb
LIST @FMAINV = @-FMAINV @+FMAINV ;
LIST @-FOBJ> = @-FOBJ> ;			 # object of infinite verb outside of the verbal
LIST @-F<OBJ = @-F<OBJ ;			 # object of infinite verb outside of the verbal
LIST @-FSUBJ> = @-FSUBJ> ;			# subject of infinite verb outside of the verbal
LIST @COMP-CS< = @COMP-CS< ;
LIST @CMPND = @CMPND ;
LIST @ADVL>CS = @ADVL>CS ;
LIST @>A = @>A ; 			 # modifier of adj
LIST @>Adv = @>Adv ; 			 # modifier of adv, to be generalised
LIST @>ADVL = @>ADVL ; 		         # modifier of advl
LIST @ADVL< = @ADVL< ; 		         # modifier of advl
LIST @>N = @>N ; 			 # modifier of N
LIST @>CC = @>CC ; 			 # modifier of CC
LIST @>Num = @>Num ; 		         # attr of numeral
LIST @>P = @>P ; 			 # complement of P
LIST @A< = @A< ; 			 # complement of A
LIST @Adv< = @Adv< ; 			 # complement of A
LIST @<ADVL = @<ADVL ;
LIST @ADVL> = @ADVL> ;
LIST @APP>Pron = @APP>Pron ;             # apposition of pron
LIST @APP-ADVL< = @APP-ADVL< ;           # apposition of advl
LIST @APP-N< = @APP-N< ; 	         # apposition of N
LIST @APP-Num< = @APP-Num< ;             # apposition of Num
LIST @APP-Pron< = @APP-Pron< ;           # apposition of Pron
LIST @CNP = @CNP ; 			 # conjunction between NPs
LIST @CVP = @CVP ; 			 # conjunction between VPs
LIST @FS-ACC>> = @FS-ACC>> ;             # finite subclause, object of speechact verb
LIST @S< = @S< ;        # a clause modifying a sentence to the right of it
LIST @FS-ADVL = @FS-ADVL ; 	         # finite subclause ...
LIST @-FS-<ADVL = @-FS-<ADVL ;            # infinite subclause - eus
LIST @-FS-ADVL> = @-FS-ADVL>  ;            # infinite subclause - eus
LIST @FS-N< = @FS-N< ;               	 # relative clause to N
LIST @FS->N = @FS->N ;                  # relative clause to N to the left side of it - eus
LIST @FS-OBJ = @FS-OBJ ; 	         # finite subclause functioning as an object
LIST @FS-SUBJ = @FS-SUBJ ;           # finite subclause functioning as a subject
LIST @FS-SPRED = @FS-SPRED ;              # finite subclause functioning as a subject predicate - eus, but not sure if in use
LIST @FS-VFIN< = @FS-VFIN< ; 	         # finite sentence, statement
LIST @FS-<APP = @FS-<APP ;              # finite subclause functioning as an apposition
LIST @-F<SPRED = @-F<SPRED ;
LIST @HAB> = @HAB> ; 			 # habitive (aka advl of possessiv constr)
LIST @<HAB = @<HAB ; 			 # habitive (aka advl of possessiv constr)
LIST @HNOUN = @HNOUN ;
LIST @IMV = @IMV ;             # infinite main verb
LIST @ICL-ADVL = @ICL-ADVL ;             # non-finite subclause ...
LIST @ICL-AUX< = @ICL-AUX< ;             # "right" argument of auxiliary (?)
LIST @ICL-OBJ = @ICL-OBJ ; 	         # non-finite subclause ...
LIST @ICL-SUBJ = @ICL-SUBJ ; 	         # non-finite subclause ...
LIST @N< = @N< ; 			 # modifier of N
LIST @Num< = @Num< ; 		         # modifier of Num
LIST @<OBJ = @<OBJ ; 			 # object
LIST @OBJ> = @OBJ> ; 			 # object
LIST @P< = @P< ; 			 # complement of P
LIST @PCLE = @PCLE ; 		         # particle
LIST @>Pron = @>Pron ;                   # Adverb to pron
LIST @Pron< = @Pron< ;
LIST @SUBJ = @SUBJ ; 		         # subject
LIST @<SUBJ = @<SUBJ ; 		         # subject
LIST @SUBJ> = @SUBJ> ; 		         # subject
LIST @tSUBJ> = @tSUBJ> ; 		         # subject
LIST @<OPRED =  @<OPRED ;
LIST @<SPRED =  @<SPRED ;
LIST @OPRED> =  @OPRED> ;
LIST @-F<OPRED = @-F<OPRED ;
LIST @SPRED> =  @SPRED> ;
LIST @SPRED =  @SPRED ;
LIST @<PPRED = @<PPRED ;
LIST @FS-IMV = @FS-IMV ;
LIST @FS-N<IAUX = @FS-N<IAUX ;      # infinite auxiliary of a (relative) subclause
LIST @VOC = @VOC ;
LIST @INTERJ = @INTERJ ;



# fao syntags

LIST @IM = @IM ; # For fao!
LIST @<IOBJ = @<IOBJ ; # For fao!
LIST @IOBJ> = @IOBJ> ; # For fao!
#LIST @rc-VAUX = @rc-VAUX ;  # For fao!
LIST @-FIOBJ> = @-FIOBJ> ;			 # object of infinite verb outside of the verbal
LIST @-F<IOBJ = @-F<IOBJ ;			 # object of infinite verb outside of the verbal
LIST @FS-P< = @FS-P< ; 	    # the finite verb of a subsentence functioning as a @P<
LIST @FS-P<IMV = @FS-P<IMV ; 	    # the infinite verb of a subsentence functioning as a @P<

# kal syntags

LIST @<SUBJ_COMP = @<SUBJ_COMP ;
LIST @AGENS> = @AGENS> ;		# agens ved PASSIV
LIST @CAU = @CAU ;	# erstatter de foelgende ved causativ - baade coref og non-coref
LIST @CAU> = @CAU> ;
LIST @CL-<ADVL = @CL-<ADVL ; # neksusadverbial der modificerer t.v.
LIST @CL-<CIT = @CL-<CIT ;	 # predikat i oo der står til et matriseverb t.v. (CIT=sitat)
LIST @CL->N = @CL->N ;       # Relativsætning stående til nominal til højre
LIST @CL-ADVL> = @CL-ADVL> ; # neksusadverbial der modificerer t.h.
LIST @CL-CIT> = @CL-CIT> ;	 # predikat i oo der står til et matriseverb t.h. CL-OBJ (oo oratobl)
LIST @CON = @CON ;	# erstatter de foelgende ved conditionalis - baade coref og non-coref
LIST @CONJ = @CONJ ;      # MAP (@CONJ) TARGET KONJUNKTION IF (-1 BOS OR ("\,")) ;
LIST @FOC = @FOC ;		# partikler, der erstatter et verballed
LIST @HEADLINE = @HEADLINE ;	# loes partikel eller verbum i overskrifter
LIST @INF->N = @INF->N ;	# tag forbeholdt de saerlige adnominale transitive infinitiver uden objekt (ilitsoqqussaralugu oqaatsit)
LIST @INTERIM = @INTERIM ;	#en tag til noget, der afventer teoretisk afklaring o.lign.
LIST @MIK-OBJ> = @MIK-OBJ> ; # indef objekt ved HTR til hoejre
LIST @POSS> = @POSS> ;
LIST @PRED = @PRED ; 		 # predikat
LIST @PRED2 = @PRED2 ; # saettes paa verbet i en bunden ledsaetning
LIST @PROP> = @PROP> ;		 # proprium til venstre i propriumskede
LIST @SUBJ_COMP = @SUBJ_COMP ;	#Prædikat til subjekt/ subjective complement
LIST @VOKATIV = @VOKATIV ;
LIST @X = @X ;
LIST @i-<ADVL = @i-<ADVL ;	 # adverbial der står til inkorporeret verbal t.v.
LIST @i-<OBJ = @i-<OBJ ;	 # tingsobjekt i Ins eller personobjekt i Trm ved dotr tv
LIST @i-<SUBJ = @i-<SUBJ ;   # "dativ-objektet" ved dotr verbal t.v.
LIST @i->N = @i->N ;		 # adled der står til inkorporeret nominal t.h.
LIST @i->V = @i->V ; 	# NIQ ved ajor, saper, artor, nalu
LIST @i-ADVL> = @i-ADVL> ;	 # adverbial der står til inkorporeret verbal t.h.
LIST @i-MIK-OBJ> = @i-MIK-OBJ> ; #objekt ved inderiveret halvtransitiv 20091106
LIST @i-N< = @i-N< ;		 # adled der står til inkorporeret nominal t.v.
LIST @i-N> = @i-N> ;
LIST @i-OBJ_DOTR> = @i-OBJ_DOTR> ;     # tingsobjekt i Ins eller personobjekt i Trm ved dotr th
LIST @i-SUBJ> = @i-SUBJ> ;   # "dativ-objektet" ved dotr verbal t.h. 'Beatrinep PERIMUT allagaq aaqquaa'
LIST @FS-OBJ> = @FS-OBJ> ; 	         # finite subclause functioning as object
LIST @FS-<OBJ = @FS-<OBJ ; 	         # finite subclause functioning as object
LIST @FS-SUBJ> = @FS-SUBJ> ; 	         # finite subclause functioning as subject
LIST @FS-<SUBJ = @FS-<SUBJ ; 	         # finite subclause functioning as subject
LIST @FS-ADVL> = @FS-ADVL> ; 	         # finite subclause functioning as adverbial to the left of the main clause
LIST @FS-<ADVL = @FS-<ADVL ; 	         # finite subclause functioning as adverbial to the right of the main clause
LIST @>V = @>V ;


# Syntactic set definitions
# =========================

LIST SPRED = @SPRED> @<SPRED @SPRED ;
LIST OPRED = @OPRED> @<OPRED ;
LIST SUBJ = @<SUBJ @SUBJ> @SUBJ @-FSUBJ> ;
LIST SUBJ> = @SUBJ> @tSUBJ> ;
LIST <SUBJ = @<SUBJ @<tSUBJ ;
LIST OBJ = @<OBJ @OBJ> @OBJ @-FOBJ> @-F<OBJ ;
LIST IOBJ = @<IOBJ @IOBJ> ;
LIST OBJ> = @OBJ> @IOBJ> ;
LIST <OBJ = @<OBJ @<IOBJ ;
LIST FOBJ> = @-FOBJ> @-FIOBJ> ;
LIST F<OBJ = @-F<OBJ @-F<IOBJ ;
LIST APP = @APP>Pron @APP-ADVL< @APP-N< @APP-Num< @APP-Pron< ;

LIST @<ARG = @<SUBJ @<SPRED @<OBJ @<OPRED @-F<OBJ @-F<OPRED @<IOBJ ;

LIST ADVL = @<ADVL @ADVL> @ADVL @-FADVL> @-F<ADVL @APP-ADVL< @CL-<ADVL @CL-ADVL> ; # @i-<ADVL @i-ADVL> ; 		         # adverbial

LIST @IAUX = @IAUX ;
LIST @FS-IAUX = @FS-IAUX ;
LIST @FS-N<IMV = @FS-N<IMV ;
LIST @ICL-P< = @ICL-P< ;
LIST <mv> = <mv> ;
LIST <aux> = <aux> ;
LIST @V = @FMV @IMV @FAUX @IAUX @FS-VFIN< @FS-ADVL @FS-<ADVL @FS-ADVL> @FS-OBJ @FS-OBJ> @FS-<OBJ @FS-SUBJ @FS-SUBJ> @FS-<SUBJ @FS-IMV @FS-N<IMV @FS-N< @FS-P< @FS-P<IMV @FS-IAUX @ICL-P< @ICL-P<IMV @FS-N<IAUX @ICL-OBJ @ICL-SUBJ @PRED @PRED2;
LIST @MCLV = @FMV @IMV @FAUX @IAUX ;
LIST @SCLV = @FS-VFIN< @FS-IMV @FS-N<IMV @FS-N< @FS-IAUX @FS-N<IAUX @FS-ADVL @FS-ADVL> @FS-<ADVL @FS-OBJ @FS-OBJ> @FS-<OBJ @FS-SUBJ @FS-SUBJ> @FS-<SUBJ;
LIST @FV = @FMV @FAUX ;
LIST @AUX = @IAUX @FAUX ;
LIST @MV = @IMV @FMV @FMVdic @IMVdic ;
LIST @FMV = @FMV ;
LIST @FAUX = @FAUX ;
LIST @FMVdic = @FMVdic ;
LIST @IMVdic = @IMVdic ;
LIST KONJ = CS CC <cs> ;

LIST @-FARG = @-FOBJ> @-F<OBJ @-FADVL> @-F<ADVL @-F<SPRED @-F<OPRED @-FSUBJ> @-FIOBJ> @-F<IOBJ ;
SET @ARG = SUBJ OR OBJ OR SPRED OR OPRED OR ADVL OR @ICL-OBJ OR @<PPRED OR IOBJ OR @POSS> OR @APP-N< OR @P< ;
SET @CLAUSE = @HNOUN OR @ARG OR @-FARG OR @V - CC ;
LIST @NOARROW = @ADVL @SUBJ @OBJ ;

LIST COMPOUND = (".*#.*"r) ;

SET S-BOUNDARY = (Pron Interr) OR Rel OR MCL-CONJ OR ADVL-COMP OR ADVL-COMPfao OR ("\;") OR (":") OR ("-") OR ("–") OR (@CVP) ;



#   §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§                             §§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§                             §§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§     dep grammar starts      §§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§                             §§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§                             §§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
#   §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§

#!! !!!Dep grammar

BEFORE-SECTIONS


#!! Correction rules
# ================

# sme-rules

LIST MUITALIT = "árvalit" "bivdit" "boagustit" "cealkit" "cuoigut" "čilget" "čurvet" "čuorvut" "dadjat" "eahpidit" "geardduhit" "gielistit" "gilljut" "hállat" "hoallat" "huikit" "huikkádit" "imaštallat" "jearrat" "jievžat"  "juoigat" "jurdilit" "jurddašit" "kommenteret" "lávlut" "lasihit" "loahpahit" "lohkat" "lohpidit" "máidnut" "máinnašit" "muitalit" "muittuhit" "nágget" "njávggádit" "oaivvildit" "rávvet" "savkalit" "sárdnidit" "šuohkihit" "váidalit" "váruhit" "vástidit" ;
	## Njáv, váidalii Busi ja gávastalai.
	## Njáv, njávggádii Busi fas ja fanahalai.

#!! * __muitalit__
SUBSTITUTE:muitalit (V) (<vdic> V) TARGET MUITALIT (0 @FMAINV) ;

# eus-rules

#!! * __XX__
SUBSTITUTE (@SUBJ> @<SUBJ) (@SUBJ>) TARGET (@SUBJ> @<SUBJ) (*1 @FMV OR @FAUX);
#SUBSTITUTE (@SUBJ> @<SUBJ) (@<SUBJ) TARGET

#!! * __XX__
SUBSTITUTE (@OBJ> @<OBJ) (@OBJ>) TARGET (@OBJ>) (*1 @FMV)(NEGATE *1 @<SUBJ);
#SUBSTITUTE (@OBJ> @<OBJ) (@<OBJ) TARGET

#!! * __XX__
SUBSTITUTE (@SPRED> @<SPRED) (@SPRED>) TARGET (@SPRED>) (*-1 @SUBJ>)(NEGATE *1 @<SUBJ) ;
#SUBSTITUTE (@SPRED> @<SPRED) (@<SPRED) TARGET
#
#SUBSTITUTE (@FS-<ADVL @FS-ADVL>) (@FS-<ADVL) TARGET
#SUBSTITUTE (@FS-<ADVL @FS-ADVL>) (@FS-ADVL>) TARGET
#
#SUBSTITUTE (@<IOBJ @IOBJ>) (@<IOBJ) TARGET
#SUBSTITUTE (@<IOBJ @IOBJ>) (@IOBJ>) TARGET
#
#SUBSTITUTE (@>N @>P) (@>N) TARGET
#SUBSTITUTE (@>N @>P) (@>P) TARGET


# fao-rules

#!! * __faoSumId=Rel__
SUBSTITUTE:faoSumId=Rel (CS) (<cs> Rel) TARGET ("sum" CS) OR ("ið" CS) ;


# kal-rules

SUBSTITUTE:kal (Rel) (Relc) ; # kaltagrules
SUBSTITUTE:kal (@PRED) (@FMV) TARGET V ;
SUBSTITUTE:kal (@<CL-CIT) (<mv> @FS-OBJ) TARGET V ;  # Should have been @FS-<OBJ, but for convenience...
SUBSTITUTE:kal (@CL-CIT>) (<mv> @FS-OBJ>) TARGET V ;
SUBSTITUTE:kal (@CL-<CIT) (<mv> @FS-OBJ) TARGET V ;  # Should have been @FS-<OBJ, but for convenience...

SUBSTITUTE:kal (@PRED2) (<mv> @FS-OBJ) TARGET V ;
SUBSTITUTE:kal (@PROP>) (@>N) TARGET (N Prop Attr) ;
SUBSTITUTE:kal (@CONJ) (@CVP) TARGET (Part) ;
SUBSTITUTE:kal (@CONJ) (@CVP) TARGET (CS) ;

# SUBSTITUTE:kalAlwaysMainV (V) (V <mv>) TARGET V ; # Awaiting a parametrisation for language


### ===========

# Substitute the syn-verbtags to dep-verbtags:
SUBSTITUTE:SubFmainv=V (@+FMAINV) (@FMV) TARGET V ;
SUBSTITUTE:SubNfmainv=V (@-FMAINV) (@IMV) TARGET V ;
SUBSTITUTE:SubFaux=V (@+FAUXV) (@FAUX) TARGET V ;
SUBSTITUTE:SubNfaux=V (@-FAUXV) (@IAUX) TARGET V ;


SET VFIN = @FMV OR @FMVdic OR @FAUX OR @FS-VFIN< OR @FS-N< OR @FS->N OR @FS-P< OR @FS-ADVL OR @FS-<ADVL OR @FS-ADVL> OR @FS-OBJ OR @FS-<OBJ OR @FS-OBJ> OR @FS-SUBJ OR @FS-SUBJ> OR @FS-<SUBJ OR @S< ;
SET NONVFIN = V - VFIN ;

# citations - the verb is marked so it will be handled differently from other verbs if it is in the end of the sentence
SUBSTITUTE:utt (@FMV)(@FMVdic) TARGET (<vdic>) (-1 COMMA LINK 1 VFIN LINK *1 @<SUBJ BARRIER @V) ;
	## Mii fertet maiddái geahčadit makkár lassi guoimmuhemiid galgat fállat vai bohtet vel eanet olbmot boahtte jagi, loahpaha duhtavaš beaivválaš jođiheaddji Eriksen.

SUBSTITUTE:utt (@FMV)(@FMVdic) TARGET (<vdic>) (*1 (":") BARRIER @V LINK 1 CITATION) ;
	## Ja go stállu álggii nohkkat, de son fas čuorvvui moarsis: "Boađe nohkkat!"
SUBSTITUTE:utt (@FMV)(@FMVdic) TARGET (<vdic>) (0 VFIN LINK -1 @SUBJ> LINK *-1 COMMA BARRIER @V) ;
SUBSTITUTE:utt (@IMV)(@IMVdic) TARGET (<vdic>) (*1 (":") BARRIER @V LINK 1 CITATION) ;
	## Ja lea dadjan: "Ale nohka mu nalde!"

# Only verbs in the predicate gets <mv> and <aux>
# -----------------------------------------------
SUBSTITUTE:SubV=mv (V) (<mv> V) TARGET @MV ;
SUBSTITUTE:SubV=aux (V) (<aux> V) TARGET @AUX ;

# kal
#SUBSTITUTE:SubV=mvkal (V) (<mv> V) TARGET 1234P ; # This one is hitting other languages

# infinite clauses:
#SUBSTITUTE:SubV=mvICL (V) (<mv> V) TARGET NONVFIN (0 @<OBJ LINK NEGATE *1 @IMV BARRIER S-BOUNDARY OR V) ;
#SUBSTITUTE:SubV=auxICL (V) (<aux> V) TARGET NONVFIN (0 AUX LINK 0 @<OBJ LINK *1 @IMV BARRIER S-BOUNDARY OR V) ;

#!! !!the finite verb
# ===============

# fao: the finite verb of pr-complement-subclauses gets @FS-P<:
SUBSTITUTE:faoSubVmv=FS-P< (@FMV)(@FS-P<) TARGET V (*-1 ("at" CS) OR Interr BARRIER @V OR @P< LINK *-1 (Pr) BARRIER @P<) ;																		    #faospecsynrules
SUBSTITUTE:faoSubVmv=FS-P< (@FMV)(@FS-P<) TARGET V (*-1 ("at" CS) BARRIER @V OR @P< LINK -1 @P< LINK -1 (Pr)) ;																				    #faospecsynrules
# fao: the infinite verb of pr-complement-subclauses gets @FS-P<IMV:																															    #faospecsynrules
SUBSTITUTE:faoSubVmv=FS-P<IMV (@IMV)(@FS-P<IMV) TARGET V (-1 ("at") LINK -1 Pr) ;																												    #faospecsynrules
SUBSTITUTE:faoSubVmv=FS-P<IMV (@IMV)(@FS-P<IMV) TARGET V (*-1 CC OR COMMA BARRIER @V OR Rel OR @CVP OR MCL-CONJ LINK NOT 0 MCL-CONJ LINK *-1 @FS-P<IMV BARRIER @V OR MCL-CONJ) ;  # coordination   #faospecsynrules
# fao: the finite verb of gets @FS-N< when if there is no Rel:																																	    #faospecsynrules
SUBSTITUTE:faoSubVmv=FS-N< (@FMV)(@FS-N<) TARGET V (*-1 @SUBJ> BARRIER @V OR S-BOUNDARY LINK *-1 COMMA BARRIER @ARG OR @V OR S-BOUNDARY LINK -1 @ARG OR @P<)(NEGATE *1 OBJ BARRIER S-BOUNDARY) ;   #faospecsynrules
SUBSTITUTE:faoSubVaux=FS-N< (@FAUX)(@FS-N<) TARGET V (*-1 @SUBJ> BARRIER @V OR S-BOUNDARY LINK *-1 COMMA BARRIER @ARG OR @V OR S-BOUNDARY LINK -1 @ARG OR @P<)(NEGATE *1 OBJ BARRIER S-BOUNDARY) ; #faospecsynrules
SUBSTITUTE:faoSubVaux=FS-N< (@IMV)(@FS-N<IMV) TARGET V (*-1 @FS-N< BARRIER @V OR S-BOUNDARY) ;																									    #faospecsynrules
# the finite verb  gets @FS-VFIN< when the subclause functions as a subject:																													    #faospecsynrules
SUBSTITUTE:faoSubVmv=FS-P< (@FMV)(@FS-VFIN<) TARGET V (*-1 ("at" CS) OR Interr BARRIER @V OR @P< LINK *-1 COPULA + (<mv>) BARRIER @V) ;														    #faospecsynrules

# the finite verb of object-subclauses gets @FS-SUBJ:
SUBSTITUTE:SubV=FS-SUBJmv (@FMV)(@FS-<SUBJ) TARGET V (-1 SPRED)(0 Qst);
SUBSTITUTE:SubV=FS-SUBJmv (@FMV)(@FS-<SUBJ) TARGET V (-1 ("ahte") LINK -1 SPRED)(0 Qst);
	## Dás leat juohkelágáš muitalusat, muhto ii leat vissis leatgo jur njuolga, go eai leat čállojuvvon.
	## Muhto vissis ii leat leatgo jur njuolga.
SUBSTITUTE:SubV=FS-SUBJmv (@FMV)(@FS-<SUBJ) TARGET V (*-1 BOS BARRIER S-BOUNDARY LINK 1 ("ahte"))(*-1 SPRED BARRIER S-BOUNDARY);
	## Dehálaš lea ahte don maid boađát.
	## Lea dehálaš ahte don maid boađát.
SUBSTITUTE:SubV=FS-SUBJmv (@FMV)(@FS-SUBJ>) TARGET V (*-1 BOS BARRIER S-BOUNDARY LINK 1 ("ahte"))(*1 COPULAS LINK *1 (@<SPRED) BARRIER S-BOUNDARY);
	## Ahte don maid boađát lea dehálaš.

# the finite verb of object-subclauses gets @FS-OBJ:
SUBSTITUTE:SubV=FS-OBJmv (@FMV)(@FS-OBJ) TARGET V (*-1 OBJ-COMP BARRIER @V OR @CVP OR CS OR Rel LINK NOT *-1 Com BARRIER @ARG LINK *-1 TV + VFIN)(NEGATE *-1 Interr BARRIER @V OR @CVP OR CS OR Rel LINK *-1 BOS BARRIER @V)(NEGATE *1 ("?"));
	#$ Sápmelaččas leai dakkár luondu, ahte son háliidišgođii gottiid.
SUBSTITUTE:SubV=FS-OBJmv (@FMV)(@FS-OBJ) TARGET V (*-1 OBJ-COMP BARRIER @V OR @CVP OR CS OR Rel LINK NOT *-1 Com BARRIER @ARG)(NEGATE *-1 Interr BARRIER @V OR @CVP OR CS OR Rel LINK *-1 BOS BARRIER @V)(NEGATE *1 ("?"))(*1 VFIN LINK *1 TV + VFIN);
SUBSTITUTE:SubV=FS-OBJmv (@FMV)(@FS-OBJ) TARGET V (*-1 CC OR COMMA BARRIER @V OR @CVP OR CS OR Rel OR @SUBJ> LINK NOT 0 MCL-CONJ LINK *-1 (@FS-OBJ) BARRIER @V)(NEGATE *1 (@<SUBJ)) ; # coordination
SUBSTITUTE:SubVmain=FS-OBJaux (@FAUX) (@FS-OBJ) TARGET V (*-1 OBJ-COMP BARRIER @V OR @CVP OR CS OR Rel LINK NOT *-1 Com BARRIER @ARG)(NEGATE *1 ("?")) ;
SUBSTITUTE:SubVmain=FS-OBJaux (@FAUX) (@FS-OBJ) TARGET V (*-1 CC BARRIER @V OR @CVP OR CS OR Rel OR @SUBJ> LINK NOT 0 MCL-CONJ LINK *-1 (@FS-OBJ) BARRIER VFIN) ;  # coordination
SUBSTITUTE:SubVmain=FS-OBJaux (@FAUX) (@FS-OBJ) TARGET V (**-1 Indef OR A BARRIER VFIN OR @CVP OR CS OR Rel LINK -1 ("man" Adv) LINK NOT *-1 Com BARRIER @ARG) ; # object-subclause starts with "man stuoris/galle"
SUBSTITUTE (@FAUX) (@FS-OBJ) TARGET V (0 (Neg Ind) LINK *-1 @FS-OBJ BARRIER VFIN) ; # coordination with Neg





#SUBSTITUTE:SubVaux=FS-P< (@FAUX)(@FS-P<) TARGET V (-1 ("at") BARRIER @V OR Rel OR @CVP LINK -1 Pr) ;
#SUBSTITUTE:SubVaux=FS-P< (@FAUX)(@FS-P<) TARGET V (*-1 CC OR COMMA BARRIER @V OR Rel OR @CVP OR MCL-CONJ LINK NOT 0 MCL-CONJ LINK *-1 @FS-P< BARRIER @V OR MCL-CONJ) ;  # coordination
#	## ... juktie faamojne øøhpehti, idtji guktie dah tjaalege-ååhpetjh.

# the finite verb of advl-subclauses gets @FS-ADVL> or @FS-<ADVL:
SUBSTITUTE:SubV=FS-<ADVLmv (@FMV)(@FS-<ADVL) TARGET V (*-1 @SUBJ> BARRIER @V OR S-BOUNDARY LINK *-1 ADVL-COMPfao BARRIER @V OR Rel OR @CVP OR @COMP-CS<) ;
#SUBSTITUTE:SubV=FS-ADVLmv (@FMV)(@FS-ADVL) TARGET V (*1 @<SUBJ BARRIER @V OR S-BOUNDARY)(*-1 ADVL-COMPfao BARRIER @V OR Rel OR @CVP OR @COMP-CS<) ;
SUBSTITUTE:SubV=FS-<ADVLmv (@FMV)(@FS-<ADVL) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR @COMP-CS<)(*-1 @FV BARRIER (":")) ;
    # the last condition makes sure there is a potential finite verb of the main clause to the left that can be modified

#SUBSTITUTE:SubV=FS-<ADVLmv (@FMV)(@FS-<ADVL) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR @COMP-CS<)(*-1 @FMVdic)(NOT *1 @FV BARRIER S-BOUNDARY) ;
SUBSTITUTE:SubV=FS-OBJ (@FMV)(@FS-OBJ) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR @COMP-CS<)(*-1 @FMVdic OR @IMVdic)(NOT *1 @FV BARRIER S-BOUNDARY) ;
    # The variant for the ones where the part following ":" is a subclause of the clause before ":" like in direct speech
	## Muhto dan gottáhallan olbmo bárdni, go son gulai ahte su áhčči lea goddojuvvon, de son dajai vašiidisguin ahte: "Mon vuolggán ja bážán visot vaikko livččo man olu dážat".
SUBSTITUTE:SubV=FS-OBJ (@FMV)(@FS-OBJ) TARGET V (*-1 CITATION BARRIER @V OR Rel OR @CVP OR @COMP-CS< LINK -1 (":") LINK *-1 @FMVdic OR @IMVdic);
	## Ja go stállu álggii nohkkat, de son fas čuorvvui moarsis: "Boađe nohkkat!"
	## Ja go bođii dat báiki, de son gohčui čanadit dal gittalaga čeabehiidda, ja son dajai: "Vurdet veháš, mon manan geahččame geainnuid."
SUBSTITUTE:SubV=FS-OBJ (@FAUX)(@FS-OBJ) TARGET V (*-1 CITATION BARRIER @V OR Rel OR @CVP OR @COMP-CS< LINK -1 (":") LINK *-1 @FMVdic OR @IMVdic);
	## Ja lea dadjan: "Ale nohka mu nalde!"

SUBSTITUTE:SubV=FS-ADVL>mv (@FMV)(@FS-ADVL>) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR @COMP-CS<)(*1 @FV BARRIER S-BOUNDARY) ;
    # the last condition makes sure there is a potential finite verb of the main clause to the left that can be modified
	## Ja vaikko presideanta logai daid dárbbašlažžan ođđasit guorahallat, ii mieđihan son Sámedikki boastut bargan.
SUBSTITUTE:SubV=FS-<ADVLmv (@FMV)(@FS-<ADVL) TARGET V (*-1 CC OR COMMA BARRIER @V OR Rel OR @CVP OR MCL-CONJ LINK NOT 0 MCL-CONJ LINK *-1 (@FS-<ADVL) BARRIER @V OR MCL-CONJ)(NEGATE *1 (@<SUBJ)) ;  # coordination, if there is no subject in the new clause
SUBSTITUTE:SubV=FS-ADVL>mv (@FMV)(@FS-ADVL>) TARGET V (*-1 CC OR COMMA BARRIER @V OR Rel OR @CVP OR MCL-CONJ LINK NOT 0 MCL-CONJ LINK *-1 (@FS-ADVL>) BARRIER @V OR MCL-CONJ)(NEGATE *1 (@<SUBJ)) ;  # coordination, if there is no subject in the new clause

# some relative clauses introduced by adverbs
SUBSTITUTE:SubV=FS-Naux (@FAUX) (@FS-N<) TARGET V (*-1 ("gos") OR ("gosa") BARRIER VFIN OR COMMA LINK *-1 N OR Po or DOPPE OR DOHKO BARRIER NOT-COMMA) ;
	## Muitalus sápmelaččaid birra, gos sii leat vuohččan orron, ja got sin dilli lea leamaš, ja mainna sii leat eallán ja gos sii leat boahtán.
SUBSTITUTE:SubV=FS-Naux (@FAUX) (@FS-N<) TARGET V (*-1 ("got") BARRIER VFIN OR COMMA LINK -1 COMMA LINK -1 N) ;
	## Ja dát lea dušše ovdamearkan, got lea Sámis geavvan.
SUBSTITUTE:SubV=FS-Naux (@FMV) (@FS-N<) TARGET V (*-1 ("gos") OR ("gosa") BARRIER VFIN OR COMMA LINK *-1 N OR Po or DOPPE OR DOHKO BARRIER NOT-COMMA) ;

SUBSTITUTE:SubVmain=FS-<ADVLaux (@FAUX)(@FS-<ADVL) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR (";")) (*-2 @FV BARRIER (":"));
	## Sus šattai álo oaivvebávččas go galggai bargat rehkenastimiin.
SUBSTITUTE:SubVmain=FS-<ADVLaux (@FAUX)(@FS-<ADVL) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR (";")) (*-2 @FMVdic)(NOT *1 @FV BARRIER S-BOUNDARY) ;
SUBSTITUTE:SubVmain=FS-ADVL>aux (@FAUX)(@FS-ADVL>) TARGET V (*-1 ADVL-COMP OR CS BARRIER @V OR Rel OR @CVP OR (";"))(*1 @FV) ;
	## Go galggai bargat rehkenastimiin sus šattai álo oaivvebávččas.
SUBSTITUTE:SubVmain=FS-ADVLaux (@FAUX) (@FS-<ADVL) TARGET V (*-1 CC BARRIER @V OR Rel OR @CVP OR @SUBJ> LINK NOT 0 MCL-CONJ LINK *-1 (@FS-<ADVL) BARRIER VFIN OR COMMA)(NEGATE *1 (@<SUBJ)) ;  # coordination
SUBSTITUTE:SubVmain=FS-ADVLaux (@FAUX) (@FS-ADVL>) TARGET V (*-1 CC BARRIER @V OR Rel OR @CVP OR @SUBJ> LINK NOT 0 MCL-CONJ LINK *-1 (@FS-ADVL>) BARRIER VFIN OR COMMA)(NEGATE *1 (@<SUBJ)) ;  # coordination
SUBSTITUTE (@FAUX) (@FS-<ADVL) TARGET V (0 (Neg Ind) LINK *-1 @FS-<ADVL BARRIER VFIN)(*1 @FMV OR @FAUX OR @FMVdic) ;
    # The last condition makes sure there is finite verb candidate for the main clause
    # coordination with Neg
	## ... juktie faamojne øøhpehti, idtji guktie dah tjaalege-ååhpetjh.
SUBSTITUTE (@FAUX) (@FS-ADVL>) TARGET V (0 (Neg Ind) LINK *-1 @FS-ADVL> BARRIER VFIN)(*1 @FMV OR @FAUX OR @FMVdic BARRIER S-BOUNDARY) ;
    # The last condition makes sure there is finite verb candidate for the main clause
	#$ Ja dasa lea dát sivva: go sápmelaš boahtá moskkus gámmirii, de son ii ipmir ii báljo maidege, go ii biegga beasa bossut njuni vuostá.

# the finite verb of a mainclause that is a daughter to another mainclause gets @S< ;
SUBSTITUTE (@FAUX) (@S<) TARGET V (0 (Neg Ind) LINK *-1 (":") LINK NOT *-1 (@FMVdic));
SUBSTITUTE (@FMAIN) (@S<) TARGET V (0 (Neg Ind) LINK *-1 (":") LINK NOT *-1 (@FMVdic));


# the finite mainverb of other subclauses gets @FS-VFIN<:
SUBSTITUTE:SubV=FS-VFIN<mv (@FMV)(@FS-VFIN<) TARGET V (*-1 CS BARRIER VFIN OR Rel OR MCL-CONJ OR @COMP-CS<)(*-1 @FMV OR @FAUX BARRIER (":")) ;
    # The last condition makes sure there is finite verb candidate for the main clause to the left
SUBSTITUTE:SubV=FS-VFIN<mv (@FMV)(@FS-VFIN<) TARGET V (*-1 CS BARRIER VFIN OR Rel OR MCL-CONJ OR @COMP-CS<)(*-1 @FMVdic)(NOT *1 @FV)  ;
SUBSTITUTE:SubV=FS-VFIN<mv (@FMV)(@FS-VFIN<) TARGET V (*-1 (CC @CVP) OR COMMA BARRIER @SUBJ> OR @V OR MCL-CONJ OR S-BOUNDARY LINK NOT 0 MCL-CONJ LINK *-1 (@FS-VFIN<) OR (@FS-IMV) BARRIER @V)(NEGATE *1 (@<SUBJ))(*-1 @FMV OR @FAUX OR @FMVdic) ;
    # The last condition makes sure there is finite verb candidate for the main clause to the left
    # coordination

# the infinite mainverb of subclauses gets @FS-IMV:
SUBSTITUTE:SubV=FS-IMVcs (@IMV) (@FS-IMV) TARGET V ((*-1 (<aux>) BARRIER @MV LINK NOT 0 @FAUX LINK *-1 CS BARRIER @MCLV) OR (*-1 CS BARRIER @V OR S-BOUNDARY OR @COMP-CS<)) ;
SUBSTITUTE:SubV=FS-IMVmo (@IMV) (@FS-IMV) TARGET V (*-1 ADVL-COMP OR OBJ-COMP BARRIER @V OR S-BOUNDARY LINK NEGATE *1 ("?")) ;
SUBSTITUTE:SubV=FS-IMVcoord (@IMV) (@FS-IMV) TARGET V (*-1 CC BARRIER S-BOUNDARY OR @V LINK -1 @FS-IMV) ; # coordination
SUBSTITUTE:SubV=FS-IMVcs (@IMV) (@FS-IMV) TARGET V (*-1 (<aux>) BARRIER @MV OR S-BOUNDARY LINK 0 @FS-OBJ OR @FS-ADVL) ;


# the finite auxverb of other subclauses gets @FS-VFIN<:
SUBSTITUTE:SubVmain=FS-VFIN<aux (@FAUX) (@FS-VFIN<) TARGET V (*-1 CS BARRIER VFIN OR Rel) ;
SUBSTITUTE:SubVmain=FS-VFIN<aux (@FAUX) (@FS-VFIN<) TARGET V (*-1 CC BARRIER @V OR Rel LINK NOT 0 MCL-CONJ LINK *-1 (@FS-VFIN<) OR (@FS-IMV) BARRIER VFIN) ;   # coordination
# the infinite auxverb of other subclauses gets @FS-IAUX:
SUBSTITUTE:SubV=FS-IAUXcs (@IAUX) (@FS-IAUX) TARGET V (*-1 (<aux>) BARRIER @MV LINK *-1 CS BARRIER @MV) ;
SUBSTITUTE:SubV=FS-IAUXmo (@IAUX) (@FS-IAUX) TARGET V (*-1 (<aux>) BARRIER @MV LINK *-1 ADVL-COMP OR OBJ-COMP BARRIER VFIN LINK NEGATE *1 ("?")) ;
# rules based on what is done in the proceedings rules (deptags):
SUBSTITUTE:SubV=FS-IMVcs (@IAUX) (@FS-IAUX) TARGET V (*-1 (<aux>) BARRIER @MV LINK 0 (@FS-VFIN<)) ;
SUBSTITUTE:SubV=FS-IMVcs (@IMV) (@FS-IMV) TARGET V (*-1 (<aux>) BARRIER @MV LINK 0 (@FS-IAUX) OR (@FS-VFIN<)) ;
SUBSTITUTE (@FAUX) (@FS-VFIN<) TARGET V (0 (Neg Ind) LINK *-1 @FS-VFIN< BARRIER VFIN)(*1 @FV) ;  # coordination with Neg
    # The last condition makes sure there is finite verb candidate for the main clause ;
SUBSTITUTE (@FAUX) (@FS-VFIN<) TARGET V (0 (Neg Ind) LINK *-1 @FS-VFIN< BARRIER VFIN)(*-1 @FV) ;  # coordination with Neg
    # The last condition makes sure there is finite verb candidate for the main clause ;


# in relative clauses:
SUBSTITUTE:SubV=FS-Nmv (@FMV) (@FS-N<) TARGET V (*-1 Rel BARRIER VFIN OR COMMA) ;
	## Ökonomihke tsiehkieh hov mieriedieh mejtie buektiehtibie daejtie ulmide illedh.
	#$ - Maid don dainna dieđuin, vástidii Liná ja áiggui vázzát viidáseappot.

SUBSTITUTE:SubV=FSN-IMV (@IMV) (@FS-N<IMV) TARGET V (*-1 (<aux>) BARRIER @MV LINK *-1 Rel BARRIER COMMA OR CS OR @V) ;
SUBSTITUTE:SubV=FSN-IMV (@IMV) (@FS-N<IMV) TARGET V (0 PrfPrc LINK *-1 Rel BARRIER @MV OR COMMA OR CS OR @V) ; # no copula
SUBSTITUTE:SubVmain=FS-Naux (@FAUX) (@FS-N<) TARGET V (*-1 Rel BARRIER VFIN) ;
SUBSTITUTE:SubV=FSN-IAUX (@IAUX) (@FS-N<IAUX) TARGET V (*-1 (<aux>) BARRIER @MV LINK *-1 Rel BARRIER @MV) ;

SUBSTITUTE:SubV=FS-ADVLmv (@FMV)(@FS-N<) TARGET V (-1 CC LINK -1 @FS-N<)(NEGATE *1 (@<SUBJ) BARRIER @V) ; # careful coordination

#SUBSTITUTE:SubV=FS-Nmv (@rc-VAUX) (@FS-N<) TARGET V (*-1 ("sum" CS @CVP)  BARRIER VFIN) ; # For fao!
SUBSTITUTE:SubV=FS-ADVLmv (@FMV)(@FS-N<) TARGET V (-1 CC LINK NOT 0 MCL-CONJ LINK *-1 @FS-N< BARRIER @V OR S-BOUNDARY)(NEGATE *1 (@<SUBJ) BARRIER @V) ;
#SUBSTITUTE (@FAUX) (@FS-VFIN<) TARGET (V Neg) (*-1 @SCLV BARRIER CC OR @V OR @SUBJ> LINK *-1 CS BARRIER @V) ;

# the vfin of the subclause will be coordinated to the vfin of the preceeding clause
SUBSTITUTE:SubV=FS-VFIN<mv (@FMV)(@FS-VFIN<) TARGET V ((*-1 CS BARRIER @V OR @COMP-CS< LINK *-1 @V) OR (*-1 ADVL-COMP BARRIER @V LINK NEGATE *1 ("?") LINK *-1 @V)) ;
SUBSTITUTE:SubV=FS-VFIN<mv (@FMV)(@FS-VFIN<) TARGET V (*-1 CC OR COMMA BARRIER @SUBJ> OR @V LINK *-1 VFIN BARRIER @V OR Rel OR COMMA LINK *-1 (Rel @SUBJ>) LINK *-1 @MV) ; # there should not be a subject

# infinite clauses:
SUBSTITUTE:SubV=iclobj (@<OBJ) (@ICL-OBJ) TARGET NONVFIN (*-1 @-FSUBJ> BARRIER @V) ;
SUBSTITUTE:SubV=iclsubj (@<SUBJ) (@ICL-SUBJ) TARGET NONVFIN (-1 IM) ;
SUBSTITUTE:SubV=iclsubj (@<SUBJ) (@ICL-SUBJ) TARGET NONVFIN (-1 CC OR COMMA LINK *-1 @ICL-SUBJ BARRIER @V OR S-BOUNDARY) ;
SUBSTITUTE:SubV=iclsubj (@<SUBJ) (@ICL-SUBJ) TARGET NONVFIN (-1 CC OR COMMA LINK *-1 @ICL-SUBJ BARRIER @V OR S-BOUNDARY) ;
SUBSTITUTE:SubV=iclobj (@<SUBJ) (@ICL-SUBJ) TARGET NONVFIN (NEGATE 0 COPULAS LINK 1 Inf)(*-1 A BARRIER WORD - Ill - Adv LINK *-1 COPULAS BARRIER WORD - Adv LINK NOT *-1 Nom BARRIER S-BOUNDARY) ;
	## Ja ii leatge buorre sutnje orrut suhkkes vuvddiid siste, gos lea liegga ilbmi.

# ellipses:
SUBSTITUTE:V=ehead (V) (<ehead> V) TARGET VFIN (*-1 Rel BARRIER VFIN OR COMMA LINK -1 BOS)(*1 (":") BARRIER VFIN) ;
    # cases where ":" repleaces "leat", which should be the daughter of root
	## Man dihte mon doaivvun dan: go gávdnojit sámegielat namat várppiin dain jávrriin, gos eai dáláš sámit bivdde šahten.


# fao:
SUBSTITUTE:faoSubV=iclp< (@P<) (@ICL-P<) TARGET Inf ; #faospecsynrules


#!! !!!Mapping rules
# =============


SECTION

### fao
SETPARENT:faoIM @IM TO (*1 Inf) ; #faospectagrules


# Inf OR Cau OR Par OR Con
### kal

SETPARENT:kal (@POSS>) TO (*1 POSSESSUM BARRIER Ind OR Int OR Opt OR Imp); #kalspectagrules
SETPARENT:kal (@AGENS>) TO (*1 V);										   #kalspectagrules
SETPARENT:kal (@>V) TO (1 V); # Aeq complement of copula "ip" verb		   #kalspectagrules
SETPARENT:kal (@i->V) TO (1 V); 										   #kalspectagrules


### cmpnd - head is the word after CC

SETPARENT:cmpnd @CMPND TO (1 CC LINK 1 WORD) ;

### habitive - head is the vfin
SETPARENT:SetHab @HAB> TO (*1 @FMV LINK 0 V-3);
SETPARENT:SetHab @HAB> TO (0* V-3 BARRIER S-BOUNDARY OR V);
SETPARENT:SetHab @<HAB TO (*-1 Neg BARRIER S-BOUNDARY OR V);


### postposition / preposition - Po/Pr is the head
SETPARENT:ComplToPo @>P TO (*1 Po OR Pr);
SETPARENT:ComplToPr @P< TO (*-1 Pr);

### np
SETPARENT:SetModToN @>N TO (*1 N) ;
SETPARENT:SetCompToN @N< TO (*-1 N) ;
SETPARENT:SetCompToN (V @N<) TO (*-1 @<ARG ) ;
SETPARENT:SetReflToN (Refl Nom @N<) TO (*-1 N) ;
SETPARENT:SetAppToRightPron @APP>Pron TO (*1 COMMA BARRIER @CLAUSE LINK 1 Pron) ;
SETPARENT:SetAppToLeftPron @APP-Pron< TO (*-1 COMMA BARRIER @CLAUSE LINK -1 Pron) ;
SETPARENT:CoordSetModToN @>N TO (1 CC LINK *1 @>N LINK *1 @CLAUSE) ;
SETPARENT @>N TO (1 COMMA LINK *1 COMMA BARRIER @CLAUSE LINK *1 N) ;
SETPARENT RCmpnd TO (1 CC LINK 1 COMPOUND) ; # can this be stricter Duomma?

SETPARENT:SetAppToN @APP-N< TO (*-1 @CLAUSE + N) ;
SETPARENT:SetAppToN @APP-N< TO (*-1 @P< + N BARRIER N) ;
SETPARENT:SetAppToN @APP-N< TO (*-1 COMMA BARRIER @CLAUSE LINK -1 N) ;

# kal-rules
SETPARENT:kalSetModToN @INF->N TO (*1 N) ;			  #kalspectagrules
SETPARENT:kalSubjComp (Sg @<SUBJ_COMP)  TO (*-1 3Sg); #kalspectagrules
SETPARENT:kalSubjComp (Sg @<SUBJ_COMP) TO (*-1 3Pl);  #kalspectagrules
SETPARENT:kalSubjComp @<SUBJ_COMP TO (*-1 SUBJ);	  #kalspectagrules
SETPARENT:kalSubjComp (Sg @SUBJ_COMP) TO (*1 3Sg);	  #kalspectagrules
SETPARENT:kalSubjComp (Sg @SUBJ_COMP) TO (*1 3Pl);	  #kalspectagrules
SETPARENT:kalSubjComp @SUBJ_COMP TO (*1 SUBJ);		  #kalspectagrules

### adjp
SETPARENT:SetAttrToRightA @>A TO (*1 A) ;
SETPARENT:SetAttrToLeftA @A< TO (*-1 A) ;

### advp
SETPARENT:SetAttrToRightA @>Adv TO (*1 Adv) ;
SETPARENT:SetAttrToLeftA @Adv< TO (*-1 Adv) ;

SETPARENT:SetAttrToLeftAdvl @ADVL< OR @APP-ADVL< TO (*-1 ADVL BARRIER @CLAUSE) ;
SETPARENT:SetAdvlToAdvl @>ADVL TO (1 @ADVL>CS) ;
SETPARENT:SetAttrToRightAdvl @>ADVL TO (*1 Adv BARRIER @CLAUSE) ;
SETPARENT:SetAttrToRightAdvl @>ADVL TO (*1 ADVL BARRIER @CLAUSE) ;

### nump
SETPARENT:SetAttrToRightNum @>Num TO (*1 Num BARRIER @CLAUSE) ;
SETPARENT:SetAttrToLeftNum @Num< OR @APP-Num< TO (*-1 Num BARRIER @CLAUSE) ;

### vp

#SETPARENT:SetFSSTAtoMV @FS-VFIN< TO (*-1 (@FAUX) OR @FMV BARRIER CC OR @FS-VFIN<) ; This one is moved.


# If there is no antecedent, then the mainv is the parent:
SETPARENT:SetFS-NtoMV @FS-N< TO (*-1 (<mv>) BARRIER CS OR ADVL-COMP) ; ##BARRIER?
	## Ökonomihke tsiehkieh hov mieriedieh mejtie buektiehtibie daejtie ulmide illedh.

# the antecedent is N or Pron:
SETPARENT:SetFS-NtoN @FS-N< TO (*-1 Rel OR ("gos") OR ("gosa") OR COMMA BARRIER @V LINK **-1 N OR Pron OR A OR Indef OR Num BARRIER @V LINK NOT 0 @HNOUN OR @APP-N< OR (Attr)) ;
	## Laake galka jeatjahtovvedh jïh orre njoelkedasse båata mij edtja buerie voeresehåksoem tjirkedh.
	## Ij migek bádes dåhku besa, ij ga aktak guhti vastev dahká jali gieles , ájnat val sij gejt Libba le iellema girjjáj tjállám.
#SETPARENT:SetFS-NtoN @FS-N< TO (*-1 Rel LINK *-1 @P< BARRIER WORD LINK *-1 Pr LINK -1 V OR BOS LINK *1 @P<) ;

# the antecedent is an object in an SOV-clause:
SETPARENT:SetFS-NtoN @FS-N< TO (*-1 Rel OR ("gos") OR ("gosa") LINK *-1 (<mv>) BARRIER WORD LINK *-1 @OBJ> OR (N @ADVL>) OR @<SPRED BARRIER @<ARG OR @V OR S-BOUNDARY) ;
	## Maŋemus mánojt la ådå lávllagij barggam ma CD:j båhti.

# jump over the not-human-candidate for antecedent if the relative pron is human:
SETPARENT:SetFS-NtoHum @FS-N< TO (*-1 RELHUM BARRIER @V OR Rel LINK **-1 N OR Pron OR A BARRIER @V LINK NOT 0 @HNOUN OR @APP-N< OR (Attr) OR (Plc)) ;
	## Siján le ietjá dille gå sáme nuorajn Sis-Finnmárkon, gejn la sábmen liehket ållu luondulasj.

# the parent of an infinite mainverb is the aux
SETPARENT:SetMVtoAUX NONVFIN TO (0 (<mv>) LINK *1 (<aux>) BARRIER OBJ-COMP OR ADVL-COMP OR Rel OR @CVP) ;
SETPARENT:SetMVtoV NONVFIN TO (0 (<mv>) LINK *-1 V) ;  # infinite vfin
SETPARENT:SetMVtoAUX NONVFIN TO (0 (<mv>) LINK *-1 (<aux>)) ;
SETPARENT:SetAUXtoAUX NONVFIN + <aux> TO (*-1 (<aux>)) ; # the parents of an infinite aux is the finite aux

# there is no finite verb in the relative clause:
SETPARENT:SetFS-NIMVtoN @FS-N<IMV TO (NOT 0 ConNeg LINK *-1 Rel BARRIER @V LINK **-1 N OR Pron OR A OR Indef BARRIER @V LINK NOT 0 @HNOUN OR @APP-N< OR (Attr)) ;
	##  Jååhannesen vaarjoe lij kaamelen-goelkijste njåetsie maam garhtse-beelhtine gårrestamme.

# fao:
SETPARENT:faoSetFS-P< @FS-P< TO (*-1 Pr) ;	   # faospecsynrules
SETPARENT:faoSetFS-P<IMV @FS-P<IMV TO (*-1 Pr) ; # faospecsynrules

# kal:

SETPARENT:kal_i-N @i->N TO (*1 N OR Num) ; # if incorporated nv #kalspectagrules
SETPARENT:kal_i-N @i->N TO (*1 (nv)) ;     # if explicit nv	    #kalspectagrules




# ellipse - no VFIN:
SETPARENT:SetFS-NtoMV @FS-N< TO (*-1 CS OR Rel OR ADVL-COMP BARRIER VFIN LINK *-1 NONVFIN BARRIER S-BOUNDARY OR VFIN LINK *-1 S-BOUNDARY BARRIER VFIN LINK *1 NONVFIN) ;
	## Son muitala ahte olmmoš galggašii álo bidjat muitui go niegada earenoamáš čielga niegu, ja de maŋit áiggiid oaidnit maid dat niehku lea viggan muitalit.

SETPARENT:SetPcleToWord @PCLE TO (1 WORD);
	## Dagke båateme leah mijjem mirhkedh?
SETPARENT:SetPcleToWord @PCLE TO (-1 WORD);
	## Gávpoga poarttat eai goassege dahppojuvvo beaivet , ii ge idja šat leat .
SETPARENT:SetPcleToVfin ("amma" @PCLE) OR ("na" @PCLE) TO (*1 VFIN);
SETPARENT:SetModToCC @>CC TO (*1 CC) ;
	## - Gea, juhkki vel liema vai liegganeahppi sihke siskkáldasat ja olgguldasat.

### ellipse
SETPARENT:SetSubjtoLeftVfin @<SUBJ TO (*-1 @CVP OR COMMA BARRIER @V LINK *-1 VFIN) ;
	## Ovdal buorida son dálkkiidis go neavrres olmmoš dábiidis.
	## Veahá áiggi maŋŋá Ánne lea juo oađđimin duljiid alde Muhtinlágan Stálu goađis gos nu meahcis, rátnu vel alde.
SETPARENT:SetSubjtoRightVfin @SUBJ> TO (*1 @CVP BARRIER @V LINK *1 VFIN) ;
	## Mađe losit siivu, dađe njoazebut manná mátki.


### local advls

SETPARENT:ToLeftPron @>Pron TO (*1 Pron);
	## ... muhto dušše sii geaid namma lea čállojuvvon Lábbá eallima girjái.
SETPARENT:ToRightPron @Pron< TO (*-1 Pron);
	## Ii mihkkege garuhusaid leat šat.

### elliptic tags - not in use in goldcorpora
LIST @OBJ>SPRED = @OBJ>SPRED ;
LIST @SUBJ<ADVL = @SUBJ<ADVL ;
LIST @SUBJ<OBJ = @SUBJ<OBJ ;
LIST @ADVL<OBJ = @ADVL<OBJ ;
LIST @SPRED<OBJ = @SPRED<OBJ ;
LIST @ADVL>SUBJ = @ADVL>SUBJ ;

SETPARENT @OBJ>SPRED TO (*1 SPRED) ;
SETPARENT @SUBJ<ADVL TO (*-1 SUBJ) ;
SETPARENT @SUBJ<OBJ TO (*-1 SUBJ) ;
SETPARENT @ADVL<OBJ TO (*-1 ADVL) ;
SETPARENT @SPRED<OBJ TO (*-1 SPRED) ;
SETPARENT @ADVL>SUBJ TO (*1 SUBJ) ;

### clause level
SETPARENT:SetObjToLeftMv <OBJ TO (*-1 (<mv>) OR (Neg Foc/ge) BARRIER S-BOUNDARY OR @-FSUBJ>) ;
SETPARENT:SetObjToRightMv OBJ> TO (*1 (<mv>) BARRIER S-BOUNDARY OR @-FSUBJ>) ;
SETPARENT:Set-FObjToLeftMv F<OBJ TO (*-1 NONVFIN BARRIER S-BOUNDARY OR @-FSUBJ> OR OBJ) ;
SETPARENT:Set-FObjToRightMv FOBJ> TO (*1 NONVFIN BARRIER S-BOUNDARY OR @-FSUBJ>) ;
SETPARENT:Set-FObjToLeftMv @-F<OPRED TO (*-1 NONVFIN BARRIER S-BOUNDARY OR @-FSUBJ>) ;

# kal
SETPARENT:kal_SetObjToRightMv @MIK-OBJ> TO (*1 (<mv>) BARRIER S-BOUNDARY OR @-FSUBJ>) ; #kalspectagrules

### Advl
SETPARENT:SetAdvlToSubj @<ADVL TO (*-1 SUBJ) ;
	## Mov mænngan båata dihte gie manneste veaksahkåbpoe.
SETPARENT:SetAdvlToLeftMv @<ADVL TO (*-1 (<mv>) BARRIER @SUBJ) ;
SETPARENT:SetAdvlToLeftNeg @<ADVL TO (*-1 Neg BARRIER S-BOUNDARY OR @-FSUBJ> OR (<mv>)) ;
SETPARENT:SetAdvlToRightMv @ADVL> TO (*1 (<mv>)) ;
SETPARENT:SetAdvlToRightMv @ADVL> TO (*1 S-BOUNDARY BARRIER (<mv>) LINK *1 COMMA LINK *1 (<mv>)) ;
SETPARENT:SetAdvlToRightMv @ADVL> TO (*1 (<mv>) BARRIER @-FSUBJ> OR S-BOUNDARY) ;
SETPARENT:SetAdvlToRightSubj @ADVL> TO (*1 @SUBJ BARRIER @V) ;
# a ralativeclause in between:
SETPARENT:SetAdvlToMcMv @ADVL> TO (*1 Rel OR OBJ-COMP BARRIER @V LINK *1 COMMA OR MCL-CONJ LINK *1 (<mv>)) ;

SETPARENT:SetAdvlToCompCS @<ADVL TO (*-1 @COMP-CS< BARRIER S-BOUNDARY OR @V) ;
SETPARENT:SetAdvlToSubj @<ADVL TO (*-1 CC OR COMMA BARRIER @V LINK 1 @<SUBJ) ;
SETPARENT:SetGostege GOSTEGE TO (*-1 Neg BARRIER @V) ;

SETPARENT:kalSetCS-AdvlToLeftMv @CL-<ADVL TO (*-1 (<mv>) BARRIER S-BOUNDARY OR @-FSUBJ>) ; # kal
SETPARENT:kalSetCS-AdvlToRightMv @CL-ADVL> TO (*1 (<mv>) BARRIER @-FSUBJ>) ;						  # kal
SETPARENT:kalSetCS-AdvlToLeftMv @i-<ADVL TO (**-1 N OR (vn) BARRIER S-BOUNDARY LINK NOT 0 (@i-<ADVL)) ;	  # kal
SETPARENT:kalSetCS-AdvlToRightMv @i-ADVL> TO (**1 N OR (vn) BARRIER S-BOUNDARY LINK NOT 0 (@i-<ADVL)) ;	  # kal
#SETPARENT:SetCS-AdvlToLeftMv @i-<ADVL TO (*-1 (vn) BARRIER S-BOUNDARY) ; # kal
#SETPARENT:SetCS-AdvlToRightMv @i-ADVL> TO (*1 (vn) BARRIER S-BOUNDARY) ; # kal

SETPARENT:SetObjToSubj @<OBJ TO (*-1 CC OR COMMA BARRIER @V LINK 1 @<SUBJ) ;



#SETPARENT @-F<ADVL TO (*-1 Inf OR Sup OR (Actio Ess) OR Ger OR (GerII) BARRIER S-BOUNDARY LINK NOT 0 @MV) ;
#SETPARENT @-FADVL> TO (*1 Inf OR Sup OR (Actio Ess) OR Ger OR (GerII) BARRIER S-BOUNDARY LINK NOT 0 @MV) ;
SETPARENT:RitvaTestAktioLeft @-F<ADVL TO (*-1 NONVFIN OR V + Actio BARRIER S-BOUNDARY LINK NOT 0 @MV) ;
# original: SETPARENT @-F<ADVL TO (*-1 NONVFIN BARRIER S-BOUNDARY LINK NOT 0 @MV) ;
SETPARENT:RitvaTestAktioRight @-FADVL> TO (*1 NONVFIN OR V + Actio OR Der/NomAct BARRIER S-BOUNDARY LINK NOT 0 @MV) ;
SETPARENT @-F<ADVL TO (*-1 PrsPrc OR VGen BARRIER S-BOUNDARY OR @V LINK -1 NONVFIN LINK NOT 0 @MV) ;
SETPARENT @-FADVL> TO (*1 NONVFIN BARRIER S-BOUNDARY LINK NOT 0 @MV) ;

SETPARENT:SetSubjToRightMv SUBJ> TO (*1 (<mv>) BARRIER S-BOUNDARY) ;
SETPARENT:SetSubjToRightVfin SUBJ> TO (*1 VFIN BARRIER S-BOUNDARY) ;
SETPARENT:SetSubjToLeftVfin <SUBJ TO (*-1 VFIN BARRIER S-BOUNDARY) ;
SETPARENT:SetRelSubjToRight (Rel @SUBJ>) TO (*1 @FS-N< BARRIER S-BOUNDARY) ;


SETPARENT @<SPRED TO (*-1 @SUBJ> BARRIER @V);
	## Sápmelaččaid historjá álbmogin lea duháhiid jagiid boaris, muhto dálá ássanguovlluin sápmelaččat eai leat ássan nu guhká.
SETPARENT @SPRED> TO (*1 @SUBJ> LINK NOT 0 Rel);
SETPARENT @<SPRED TO (*-1 (<mv>) OR @HNOUN OR @SUBJ);
	## Mov mænngan båata dihte gie manneste veaksahkåbpoe.
SETPARENT @SPRED> TO (*1 (<mv>) OR @HNOUN BARRIER Rel OR S-BOUNDARY);
SETPARENT @-F<SPRED TO (*-1 NONVFIN LINK NOT 0 @MV) ;

SETPARENT @<OPRED TO (*-1 V BARRIER S-BOUNDARY LINK NOT 0 IV);
SETPARENT @OPRED> TO (*1 V BARRIER S-BOUNDARY LINK NOT 0 IV);

SETPARENT @<OPRED TO (*-1 OBJ BARRIER S-BOUNDARY);
SETPARENT @OPRED> TO (*1 OBJ BARRIER S-BOUNDARY);
SETPARENT @<PPRED TO (*-1 SPRED OR OPRED) ;

# @COMP-CS<
SETPARENT:CNPToMvwhenComp-cs @CNP TO (*1 @COMP-CS< BARRIER @CLAUSE LINK *-1 @CNP LINK *-1 (<mv>)) ;
SETPARENT:Comp-cs @COMP-CS< TO (*-1 CS) ;
SETPARENT @ADVL>CS TO (1 CS) ;

# the finite verb to the subject when there is a relative clause in between
SETPARENT:SetSubjVfinAfterRelCl @SUBJ> TO (*1 Rel BARRIER VFIN OR S-BOUNDARY LINK *1 @FAUX OR @FMV) ;
	## Genadutkit geaid eamiálbmogat miehtá máilmmi leat vuosttaldan garrasit, leat dál jođus Sápmái, ja sii ohcet sámi dievdduid genadutkamii.

### coordination ###

### subjunction
SETPARENT:SetCCellipse KONJ + @CVP TO (*1 @<SUBJ BARRIER VFIN) ;
SETPARENT:SetCCellipse KONJ + @CVP TO (*1 KONJ + @CVP BARRIER @V LINK *-1 @SUBJ> BARRIER @CVP) ;
SETPARENT:SetCCToCC (CC @CVP) TO (1 CS) ;
SETPARENT:SetKonjToFMV KONJ + @CVP TO (*1 @FMV) ;
SETPARENT:SetKonjToV KONJ + @CVP TO (*1 VFIN OR NONVFIN BARRIER S-BOUNDARY) ;

### coordinator
SETPARENT:SetCNPToWord @CNP TO (*-1 WORD) ;
SETPARENT:SetCVPToWord @CVP + CC TO (*-1 VFIN) ;
SETPARENT:SetCVPToWord @CVP + CC TO (-1 BOS LINK 3 CS LINK -1 WORD) ;
SETPARENT:SetCVPToWord @CVP + CC TO (1 CS) ;
	## Ja jos doppe livččui čoakkánbáiki soames alla vári nalde, de veajálii sápmelaš čilget oba bures su iežas áššiid.
	## Ja go eai ožžon deinna ahte dubmeje, de sii álge cábmit ja dubmeje helvehii ja garrude ja čolge deid, geat eai álgán.


LIST COORD = @SUBJ> @<SUBJ @<OBJ @OBJ> @<SPRED @SPRED> @<OPRED @OPRED> @APP-N< @ADVL<OBJ @SUBJ<ADVL @OBJ>SPRED @COMP-CS< @SPRED @>P @P< @ADVL> @<ADVL  @CL-ADVL> @CL-<ADVL  @i-ADVL> @i-<ADVL @i-ADVL @-F<OBJ  @<IOBJ @IOBJ> ;
LIST VERBCOORD = @FMV @FAUX @IAUX @FAUX @FS-IMV @FS-VFIN< @FS-ADVL @FS-OBJ @IMV @FS-N<IMV @FS-P< @FS-P<IMV @FS-OBJ> @FS-<OBJ @ICL-P< @ICL-OBJ @ICL-SUBJ;

# the first part of a coordination is the head of all the coordinated parts and gets the tag <ctjHead>
SUBSTITUTE:ctjHead (@>N) (<ctjHead> @>N) TARGET @>N (NEGATE *-1 @CNP OR COMMA BARRIER @V LINK -1 @>N)(1 COMMA OR @CNP LINK *1 @>N BARRIER @ARG OR @V LINK NEGATE *1 COMMA BARRIER @CLAUSE LINK 1 @CLAUSE) ;
SUBSTITUTE:ctjHead (@SUBJ>) (<ctjHead> @SUBJ>) TARGET @SUBJ> (NEGATE *-1 @CNP OR COMMA BARRIER @V LINK -1 @SUBJ>)(1 COMMA OR @CNP LINK *1 @SUBJ> BARRIER @ARG OR @V OR S-BOUNDARY LINK NOT 0 Rel) ;
SUBSTITUTE:ctjHead (@<SUBJ) (<ctjHead> @<SUBJ) TARGET @<SUBJ (NEGATE *-1 @CNP OR COMMA BARRIER @V OR @ARG LINK -1 @<SUBJ)(1 COMMA OR @CNP LINK *1 @<SUBJ BARRIER @ARG OR @V OR S-BOUNDARY) ;
SUBSTITUTE:ctjHead (@<OBJ) (<ctjHead> @<OBJ) TARGET @<OBJ (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR (<mv>) LINK -1 @<OBJ)(1 COMMA OR @CNP LINK *1 @<OBJ BARRIER @V OR @ARG OR S-BOUNDARY) ;
SUBSTITUTE:ctjHead (@<OBJ) (<ctjHead> @<OBJ) TARGET @<OBJ (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR (<mv>) OR S-BOUNDARY LINK *-1 @<OBJ BARRIER @V OR @ARG)(0 Num LINK *1 (N Gen) BARRIER NOT-ADJ LINK 1 COMMA OR @CNP LINK *1 @<OBJ BARRIER @V OR @ARG) ;
SUBSTITUTE:ctjHead (@OBJ>) (<ctjHead> @OBJ>) TARGET @OBJ> (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR (<mv>) OR S-BOUNDARY LINK -1 @OBJ>)(1 COMMA OR @CNP LINK *1 @OBJ> BARRIER @ARG OR @V) ;
SUBSTITUTE:ctjHead (@-F<OBJ) (<ctjHead> @-F<OBJ) TARGET @-F<OBJ (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR @V LINK -1 @-F<OBJ)(1 COMMA OR @CNP LINK *1 @-F<OBJ BARRIER @ARG OR @V OR S-BOUNDARY) ;
SUBSTITUTE:ctjHead (@APP-N<) (<ctjHead> @APP-N<) TARGET @APP-N< (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @APP-N<)(1 COMMA OR @CNP LINK *1 @APP-N< BARRIER @ARG) ;
SUBSTITUTE:ctjHead (@<SPRED) (<ctjHead> @<SPRED) TARGET @<SPRED (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @<SPRED)(1 COMMA OR @CNP LINK *1 @<SPRED BARRIER @ARG OR S-BOUNDARY) ;
SUBSTITUTE:ctjHead (@SPRED>) (<ctjHead> @SPRED>) TARGET @SPRED> (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @SPRED>)(1 COMMA OR @CNP LINK *1 @SPRED> BARRIER @ARG) ;
SUBSTITUTE:ctjHead (@<ADVL) (<ctjHead> @<ADVL) TARGET @<ADVL (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @<ADVL)(1 @CNP LINK *1 @<ADVL BARRIER @ARG OR @V OR S-BOUNDARY OR CC) ;
SUBSTITUTE:ctjHead (@ADVL>) (<ctjHead> @ADVL>) TARGET @ADVL> (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @ADVL>)(1 @CNP LINK *1 @ADVL> BARRIER  @ARG OR @V OR S-BOUNDARY OR CC) ;
SUBSTITUTE:ctjHead (@-F<ADVL) (<ctjHead> @-F<ADVL) TARGET @-F<ADVL (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR @V LINK -1 @-F<ADVL)(1 COMMA OR @CNP LINK *1 @-F<ADVL BARRIER @ARG OR @V OR S-BOUNDARY) ;
	## Muhto lei nu váttis rehkenastit tálain ja bustávain.
SUBSTITUTE:ctjHead (@SPRED) (<ctjHead> @SPRED) TARGET @SPRED (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @SPRED)(1 COMMA OR @CNP LINK *1 @SPRED BARRIER @ARG) ;
SUBSTITUTE:ctjHead (@<OPRED) (<ctjHead> @<OPRED) TARGET @<OPRED (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @<OPRED)(1 COMMA OR @CNP LINK *1 @<OPRED BARRIER @ARG) ;
SUBSTITUTE:ctjHead (@OPRED>) (<ctjHead> @OPRED>) TARGET @OPRED> (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @OPRED>)(1 COMMA OR @CNP LINK *1 @OPRED> BARRIER @ARG) ;
SUBSTITUTE:ctjHead (@COMP-CS<) (<ctjHead> @COMP-CS<) TARGET @COMP-CS< (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @COMP-CS<)(1 COMMA OR KONJ + @CNP LINK *1 @COMP-CS< BARRIER @ARG OR CS) ;
SUBSTITUTE:ctjHead (@>P) (<ctjHead> @>P) TARGET @>P (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @>P)(1 COMMA OR @CNP LINK *1 @>P BARRIER @ARG) ;
SUBSTITUTE:ctjHead (@P<) (<ctjHead> @P<) TARGET @P< (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR S-BOUNDARY LINK -1 @P<)(1 COMMA OR @CNP LINK *1 @P< BARRIER @ARG) ;
SUBSTITUTE:faoctjHead (@<IOBJ) (<ctjHead> @<IOBJ) TARGET @<IOBJ (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR (<mv>) OR S-BOUNDARY LINK *-1 @<IOBJ BARRIER @V OR @ARG)(0 Num LINK *1 (N Gen) BARRIER NOT-ADJ LINK 1 COMMA OR @CNP LINK *1 @<IOBJ BARRIER @V OR @ARG) ; # # faospectagrules
SUBSTITUTE:faoctjHead (@IOBJ>) (<ctjHead> @IOBJ>) TARGET @IOBJ> (NEGATE *-1 @CNP OR COMMA BARRIER @ARG OR (<mv>) OR S-BOUNDARY LINK -1 @IOBJ>)(1 COMMA OR @CNP LINK *1 @IOBJ> BARRIER @ARG OR @V) ;																  # faospectagrules


# coordination - not verbs
SETPARENT:Coord $$COORD TO (*-1 COMMA OR @CNP BARRIER @V OR S-BOUNDARY OR $$COORD LINK *-1 $$COORD + <ctjHead>);
	## Maahtoe jïh skuvle lea dellie mubpie vihkeles tsiehkiem daennie orre våaroemisnie.

# coordinatin of @>N
SETPARENT:>NCoord @>N TO (*-1 COMMA OR CC BARRIER @CLAUSE LINK *-1C @>N + <ctjHead> BARRIER @CLAUSE);
	## Dát leat luohtehahtti ja duohta sánit .
	#$ Niegadan su birra go oainnán David Beckham ja Manchester United!
SETPARENT:Not>NCoord @>N TO (1 (N @>N));
	## Dát lea Dávveda bártni ja Abrahama bártni sohka.

### verbcoordination

# verbcoordination - mainclauses
#SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP OR MCL-CONJ LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @MCLV)(NEGATE 0 Neg LINK 1 ("ge"))(*1 COMMA OR CC BARRIER Rel OR CS OR (":") LINK **1 VFIN LINK 0 @MCLV) ; # Added (CS @CVP) barrier (next line) tt.
SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP OR MCL-CONJ LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @MCLV)(NEGATE 0 Neg LINK 1 ("ge"))(*1 COMMA OR CC BARRIER Rel OR CS OR (":") LINK **1 VFIN BARRIER (CS @CVP) LINK 0 @MCLV ) ;
	## Muhtun geasi nieida jávkkai, ja olbmot ohce su, muhto eai gávdnan su eai gostege, eaige diehtán gosa lei šaddan.
SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @MCLV)(NEGATE 0 Neg LINK 1 ("ge"))(*1 Rel BARRIER @V LINK *1 COMMA OR @CVP BARRIER Rel OR CS LINK *1 @SUBJ> BARRIER @V LINK **1 VFIN LINK 0 @MCLV) ; # a relative clause in between
	## Lea vuosttaš CD maid Sámi Jienat almmuha ja CD galgá leat válmmas geassemánu 10. beaivvi 2005.

# verbcoordination - subclauses
SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP OR Rel LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @SCLV)(NEGATE *-1 CS BARRIER @V OR ADVL-COMP LINK *1 @SCLV LINK *1 ADVL-COMP BARRIER @V) (NEGATE 0 Neg LINK 1 ("ge"))(*1 COMMA OR CC LINK *1 VFIN BARRIER ADVL-COMP OR CS OR Rel LINK 0 @SCLV) ;
	## Go bassat lihtiid dahje málestit siiddas, de sáhttit seammás guldalit radio.

## for sma
#SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @SCLV)(NEGATE *-1 CS BARRIER @V OR ADVL-COMP LINK *1 @SCLV LINK *1 ADVL-COMP BARRIER @V) (NEGATE 0 Neg LINK 1 ("ge"))(*1 COMMA OR CC LINK *1 VFIN BARRIER Rel LINK 0 @SCLV) ;


LIST MADE = "mađe" "mađi" ;
LIST DADE = "dađe" "dađi" ;


# two subordinates:
SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER @V LINK *-1 VFIN BARRIER CS OR ADVL-COMP OR Rel)(0 @SCLV)(NEGATE 0 Neg LINK 1 ("ge"))(*-1 ADVL-COMP OR CS OR Rel BARRIER @V LINK NOT 0 OBJ-COMP LINK *1 VFIN LINK *1 COMMA OR CC BARRIER VFIN LINK *1 VFIN BARRIER @SUBJ> OR @V LINK 0 @SCLV) ;
#SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @SCLV)(NEGATE 0 Neg LINK 1 ("ge"))(*-1 ADVL-COMP OR CS BARRIER @V LINK NOT 0 OBJ-COMP LINK *1 VFIN LINK *1 COMMA OR CC BARRIER VFIN LINK *1 ADVL-COMP OR CS BARRIER @V LINK *1 VFIN BARRIER S-BOUNDARY LINK 0 @SCLV) ;
	## Dállu lea divrras midjiide danne go dat vuosiha govt mearrasámit elle ovdal ja makkár viesut sis ledje.
SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET VFIN (NEGATE *-1 CC OR COMMA BARRIER CS OR ADVL-COMP LINK *-1 VFIN BARRIER CS OR ADVL-COMP)(0 @SCLV)(NEGATE 0 Neg LINK 1 ("ge"))(*-1 MADE OR DADE BARRIER @V LINK *1 VFIN LINK *1 DADE BARRIER VFIN LINK *1 VFIN LINK 0 @SCLV) ;
	## Mađe stuorit RAM-muitu du dihtoris lea, dađe eanet dihtorprográmmaid sáhtát geavahit oktanaga.

# two infinite verbs
SUBSTITUTE:ctjHead (V) (<ctjHead> V) TARGET $$VERBCOORD (NOT 0 VFIN)(NEGATE *-1 CC OR COMMA BARRIER CS LINK *-1 $$VERBCOORD)(*1 COMMA OR CC BARRIER $$VERBCOORD LINK *1 $$VERBCOORD BARRIER CS OR @V) ;
	## Tjirkedh voeresgåetien-sijjieh gaajhkeside 2015den åvtelen, jïh voeresalmetji reaktide nænnoestidh.
	## Tálat ja bustávat sáhtte jorrat girjjis ja šaddat čáhppes sáhcun.

SETPARENT:SetCNPToInf @CNP TO (*-1 <ctjHead> LINK 0 Inf) ;
	## Tálat ja bustávat sáhtte jorrat girjjis ja šaddat čáhppes sáhcun.

SETPARENT:FSSTAtoX @FS-VFIN< TO (*-1 @X) ;

# subclause to mainclause
SETPARENT:SetFSSTAtoMV @FS-VFIN< TO (*-1 @FAUX OR @FMV BARRIER CC OR @FS-VFIN<) ;
	## Gávpoga poarttat eai goassege dahppojuvvo beaivet, ii ge idja šat leat .

# subclause to another kind of subclause
SETPARENT:SetFSSTAtoRelOrAdvl @FS-VFIN< TO (*-1 @FS-N< OR @FS-ADVL BARRIER VFIN OR @SUBJ>) ;
	## Usjudallá jus ieddne le sunnuv åhtsåmin, ja de ij sunnuv gávna gå oademin libá, ja gåktu de jus soames ádjá rádna båhti.

SETPARENT @FS-VFIN< TO (*-1 ADVL-COMP BARRIER @FS-VFIN< OR CS LINK *-1 VFIN) ; # not in use

# subclause to subclause
SETPARENT @FS-VFIN< TO (*-1 @FS-VFIN< BARRIER @MCLV OR Rel) ;
	## Laavloejigan jih tuhtjigan luste, jih gosse idtjigan åerieh jallh byøpmedh, die heehkigan jih beenghkigan dam baeniem guktie dihte gåetie edtja stoerre jih tjaekeds sjïdtedh.

# subclause to relative clause
SETPARENT @FS-VFIN< TO (*-1 @FS-N< BARRIER @MV) ;
	## Gávpoga váldogeainnu ja eanu gaskkas lea eallima muorra mii šaddada šattuid guoktenuppelot geardde ja addá šattuidis juohke mánus .

SETPARENT @FS-VFIN< + Neg TO (1 ("ge") LINK *-1 GOSTEGE BARRIER CS OR CC LINK -1 Neg LINK *-1 Neg BARRIER VFIN) ; # not in use

SETPARENT @FS-VFIN< + (Neg Foc/ge) TO (*-1 GOSTEGE BARRIER CS OR CC LINK -1 Neg LINK *-1 Neg BARRIER VFIN) ; # not in use

SETPARENT:RelVtoVfin @FS-VFIN< (NONE p (*)) TO (*1 @FV) ;
	## Gå de bivvám ja bårråm libá, de máná nav nagerduvvaba.
SETPARENT:RelVtoVfin @FS-VFIN< (NONE p (*)) TO (*-1 @FV) ; # not in use
#SETPARENT:RelVtoVfin @FS-VFIN< TO (*-1 @ADVL>SUBJ BARRIER VFIN LINK *1 @SUBJ) ;  # not in use


### nonfinite clauses
SETPARENT:InfinSubj @-FSUBJ> TO (*1 NONVFIN);
	## Muhtinlágan Stállu cáhpá goikebierggu sudnuide ja dáhttu mánáid boradit. # mánáid
SETPARENT:InfinObj @ICL-OBJ TO (*-1 (<mv>));
	## Muhtinlágan Stállu cáhpá goikebierggu sudnuide ja dáhttu mánáid boradit. # boradit
SETPARENT:InfinObj @ICL-P< TO (*-1 Pr BARRIER @P<);
SETPARENT:InfinObj @ICL-SUBJ TO (*-1 (<mv>));


### direkte tale
SETPARENT @FMVdic (NONE p (*)) TO (@0 (*));
	## Ökonomihke tsiehkieh hov mieriedieh mejtie buektiehtibie daejtie ulmide illedh, Stoltenberge jeahta.

# mv is preceeding aux
SETPARENT @FS-VFIN< TO (*-1 @FS-IMV BARRIER VFIN OR @CVP) ;
	## Usjudallá jus ieddne le sunnuv åhtsåmin, ja de ij sunnuv gávna gå oademin libá, ...

# obj-subclause to the nearest mv to the left
SETPARENT:OBJsentenceToSentence @FS-OBJ TO (*-1 (<mv>) LINK NOT 0 IV);
	## Mii fertet maiddái geahčadit makkár lassi guoimmuhemiid galgat fállat vai bohtet vel eanet olbmot boahtte jagi.

# advl-subclause to the nearest mv to the left
SETPARENT:ADVLsentenceToSentence @FS-ADVL TO (*-1 ADVL-COMP OR CS LINK NOT 0 MCL-CONJ LINK **-1 (<mv>) BARRIER @SUBJ> OR @V OR (":") LINK NOT 0 @FS-N< OR @FS-N<IMV) ;
	## Guktie vienhth jis dohte baenie-saehpie sååjhtoe båetedh! # no mainclause

# advl-subclause to mainclause' mainverb
SETPARENT:ADVLsentenceToSentence @FS-ADVL (NONE p (*)) TO (*-1 @IMV OR @FMV BARRIER (":"));
	## Gávpot ii dárbbaš čuovgga beaivvážis ii ge mánus, dasgo Ipmila hearvásvuohta čuvge dan, ja Láppis lea dan čuovga.

# subclause to mainclause to the right
SETPARENT:ADVLsentenceToSentence @FS-ADVL (NONE p (*)) TO (*1 @FMV OR @IMV);
	## Goh Jeesuse ånnetji guhkiebasse båata, dellie Seebedevusen elkide, Jaahke gonnoeh Jååhannesem vuajnije.
SETPARENT:ADVLsentenceToSentence @FS-IMV (NONE p (*)) TO (*-1 CS BARRIER @V LINK *-1 BOS BARRIER @V LINK *1 VFIN LINK 0 (<mv>));

SETPARENT:OBJsentenceToSentence @FS-OBJ> TO (*1 (<mv>) LINK NOT 0 IV);

SETPARENT:ADVLsentenceToSentence @FS-ADVL> TO (*1 (<mv>));
    # the finite verb of a subclause should go to the main verb of the main clause to its right
	## Go Liná lea boahtán ruoktot maŋŋel skuvlla, manai son njuolga Busi lusa.
SETPARENT:ADVLsentenceToSentence @FS-<ADVL TO (*-1 (<mv>));
    # the finite verb of a subclause should go to the main verb of the main clause to its left

# kal
SETPARENT:kal_OBJsentenceToSentence @CAU TO (*-1 (<mv>)); #kalspectagrules
SETPARENT:kal_OBJsentenceToSentence @CAU TO (*1 (<mv>));  #kalspectagrules
SETPARENT:kal_OBJsentenceToSentence @CAU> TO (*1 (<mv>)); #kalspectagrules
														  #kalspectagrules
SETPARENT:kal_OBJsentenceToSentence @CON TO (*-1 (<mv>)); #kalspectagrules
SETPARENT:kal_OBJsentenceToSentence @CON TO (*1 (<mv>));  #kalspectagrules



SETPARENT:VCoord $$VERBCOORD TO (*-1 COMMA OR CC BARRIER CS OR Rel LINK *-1 $$VERBCOORD + <ctjHead>);
	## Karijuse, die lean heehkeme jih heehkeme.
# fao - Rel subclause withno Rel
#SETPARENT:SetFS-NtoN @FS-N< TO (*-1 @SUBJ> BARRIER @V OR S-BOUNDARY LINK *-1 COMMA BARRIER @CLAUSE OR S-BOUNDARY LINK *-1 @ARG OR @-FARG) ;

SETPARENT:SetMVtoAUX NONVFIN TO (0 (<mv>) LINK *-1 (<aux>) BARRIER @V OR S-BOUNDARY) ;
SETPARENT:SetMVtoIAUX NONVFIN TO (0 (<mv>) LINK *1 (<aux>) BARRIER @V OR S-BOUNDARY LINK 0 NONVFIN) ;
SETPARENT:SetMVbeforeColon VFIN TO (*-1 (":") BARRIER @V OR S-BOUNDARY LINK *-1 (<mv>)) ;

# SETPARENT @HNOUN TO (*-1 N BARRIER @V); # sme version
SETPARENT @HNOUN TO (*-1 N BARRIER @V LINK NOT 0 @POSS>); # sme + kal

SETPARENT @HNOUN TO (1 (":") LINK *1 @V OR (@SUBJ) BARRIER S-BOUNDARY);
SETPARENT @HNOUN TO (-1 (":") LINK *-1 @V OR (@SUBJ) BARRIER S-BOUNDARY);
	## Karijuse: «Mij dellie?»

SETPARENT WORD (NONE p (*)) TO (1 S-BOUNDARY LINK -2 S-BOUNDARY LINK @0 (*));

SETPARENT:sentenceToSentence @FV (NONE p (*)) TO (*-1 @FV + <ctjHead>);
	# Nordlysbearaš unnui dušše moatti olbmui ja maŋimuš vuorbi lei gesson.
SETPARENT:MVsentenceToMVSentence @FMV (NONE p (*)) TO (*-1 @FMV OR @FAUX);
	# Go leaba liegganan ja boradan, de máná-guovttos nu váibaba nu váibaba.
SETPARENT:MVsentenceToMVSentence @FAUX (NONE p (*)) TO (*-1 @FMV OR @FAUX);
	# Valla hæhttuji liehket gárvvása duostotjit vuosstemielav gå iehtjáda ájttsi sij e ållida rájnasvuodarávkalvisáv ja gåvåv sáme kultuvra ja identitehta birra mij le moaddásijn.

SETPARENT @HNOUN (NONE p (*)) TO (@0 (*));

SETPARENT:@S< @S< TO (@0 (*) LINK cA (*)) ;
	## Ja dasa lea dát sivva: go sápmelaš boahtá moskkus gámmirii, de son ii ipmir ii báljo maidege, go ii biegga beasa bossut njuni vuostá.

# direkte tale
SETPARENT:sentenceToUttv @FV (NONE p (*)) TO (*1 @FMVdic);
	## Daennie aamhtesine byjjes Nöörje tjoevere åvtehkine årrodh, nov Kristin Halvorsene jeahta.

# finite verb in mainclause to root
SETPARENT:FMVToRoot @FMV (NONE p (*)) TO (@0 (*));
SETPARENT:FAUXToRoot @FAUX (NONE p (*)) TO (@0 (*));
	## Reerenassenbielieh leah njielje jaepiej tjïrrh vuesiehtamme ahte ektesne maehtiejibie buerie tjoevtedimmieh gaavnedh.
SETPARENT:sentenceToSentence VFIN (NONE p (*)) TO (*-1 VFIN); # just in case...

# very elliptic mainclause
SETPARENT:noarrow VFIN (NONE p (*)) TO (*-1 CS LINK *-1 @NOARROW BARRIER @V);

SETPARENT @V (NONE p (*)) TO (@0 (*)); # to root

## div


SETPARENT:vocToRight @VOC TO (*1 VFIN);
	## Karijuse, die lean heehkeme jih heehkeme.
SETPARENT:vocToLeft @VOC TO (*-1 VFIN BARRIER (":"));
	## Ih onne-vielle datne maam guarkah.
SETPARENT:vocCoord @VOC TO (-1 CC LINK -1 @VOC); # Per ja Kari, ......
SETPARENT @INTERJ TO (*-1 BOS LINK *1 @MV);
	### Jaa jaa, nåå giehtelien vij.
	### Ja dan seammá bártni láveje nieiddatnai juoiggadit: Ovttain sániin gávnnai váimmu, voja voja voja.
SETPARENT @SPRED TO (*1 VFIN) ; # @SPRED - there is no mainv for the spred
	## Die maa onterligksh nommh, ih goh tuhtjh, men die ligan onterligksh nierretjh aaj.
SETPARENT @SPRED TO (*-1 VFIN) ; # @SPRED - there is no mainv for the spred
	## Reerenasse bæjkohte ahte ektiebarkoereforme galka tjïrrehtovvedh, jïjnjebe sjïeremaahtoe skïemhtjegåetiesektovresne, nynnehkåbpoe tjïerveshåksoe, jïh jïjnjebh voeresgåetieh tseegkedh ...
SETPARENT @SUBJ TO (*1 VFIN) ; # @SUBJ - there is no vfin for the subj - no cases in our gollecorpora
SETPARENT @SUBJ TO (*-1 VFIN) ; # @SUBJ - there is no vfin for the subj
	## Men Jensen aktene baenesne lij raejkie, jih desnie lin gøøkte nierretjh årroeminie maj nomme Karijuse jih Baktuse.
SETPARENT @SUBJ TO (-1 Rel LINK *-1 N OR Indef OR A OR Num) ; # @SPRED - there is no mainv for the spred
SETPARENT (Rel @SUBJ) TO (*-1 N OR Pers OR Indef OR A) ; # @SUBJ - there is no vfin for the subj
	## Mov mænngan båata dihte gie manneste veaksahkåbpoe.
SETPARENT SUBJ (NONE p (*)) TO (@0 (*));
	## Dennie synnagovgesne jis akte ålma maam doenh-aajmoe doerelamme.
SETPARENT SPRED (NONE p (*)) TO (@0 (*));
	## Sálugin guhti dán girje åvddålijsárnnoma bágojt vuorkki .

# kal-rules
SETPARENT:kalVokativ @VOKATIV TO (*1 @MV); #kalspectagrules

# SUBSTITUTE:kalNeverMainV (V <mv>) (V) TARGET V ; ##kalspectagrules

# appositions
SETPARENT @APP-Pron< TO (*-1 Pron);
	## Ja sii dolle dán lága juohkehaš.

# punctuation
### CLB
SETPARENT:CLB CLB TO (@0 (*) LINK cA (*)) ;
SETPARENT:PUNCTL (PUNCT LEFT) TO (1 (*)) ; #Hva skal vi gjøre med PUNCT?
SETPARENT:PUNCTR (PUNCT RIGHT) TO (-1 (*)) ; #Hva skal vi gjøre med PUNCT?
#SETPARENT:CLB CLB TO (1**A (*) LINK p (>>>)) ;
    # goes to @FAUX if there is one, if not to @FMV, if not to @SUBJ> in ellipsis
    # in any case to the first child of root
	## Ávdugas dat guhte vurke dán girjji profehtalaš sániid.
SETPARENT:QMARK QMARK TO (*-1 CITATION LINK *1 VFIN) ;
SETPARENT:COMMA COMMA TO (-1 WORD) ;
    # this rule is for coordination of noun phrases
    # if there is not a conjunction directly after
SETPARENT:COMMA COMMA TO (*-1 (@FS-ADVL>)) ;
    # this rule sets the mother of the comma to the finite verb of the preceeding subclause
SETPARENT:COMMA COMMA TO (*1 (@FS-<ADVL)) ;
    # this rule sets the mother of the comma to the finite verb of the following subclause
SETPARENT:COMMA COMMA TO (1 CC OR CS OR Rel OR MO-MANge) ;
    # this rule is pretty specific
	## Earát ges bargagohte stuorit šibitdoaluin, ja šattai dárbu várjalit eananbihtáid ja ládjogittiid, gos galge dálvefuođđaroasi viežžat.
#SETPARENT:COMMA COMMA TO (1 (<vdic>) BARRIER CC OR CS OR Rel OR MO-MANge) ;
#    # this rule sets the mother to the finite verb of the main clause if a conjunction or relative pronoun is missing
#	## Maid don dainna dieđuin, vástidii Liná.
#	## Go sáhttá olbmos nie čáppa modji, lei son jurdilan.
SETPARENT:COMMA COMMA TO (1 CC OR CS OR Rel OR MO-MANge) ;

SETPARENT:COMMA COMMA TO (1 APP) ;
	## Mun, Johanas, lean dat guhte lean gullan ja oaidnán buot dán.
SETPARENT:COMMA COMMA TO (-1 APP) ;
	## Mun, Johanas, lean dat guhte lean gullan ja oaidnán buot dán.
SETPARENT:COMMA COMMA TO (*-1 @SCLV LINK *-1 @CVP) ;
	## Ja dasa lea dát sivva: go sápmelaš boahtá moskkus gámmirii, de son ii ipmir ii báljo maidege, go ii biegga beasa bossut njuni vuostá.
    # This rule links the comma to a previous subjunction if a previous subclause-verb can be found
#SETPARENT:DASHHYPHEN DASHHYPHEN TO (@0 (*) LINK cA (*)) ;
SETPARENT:PUNCT PUNCT TO (**1A (*) LINK p (>>>)) ; #Funker denne?
SETPARENT:DASHHYPHEN DASHHYPHEN TO (*1A VFIN LINK p V) ;
#SETPARENT:PUNCT PUNCT TO (1C Rel OR MO-MANge OR CS OR CC OR APP OR ("de")) ;
SETPARENT:PUNCT PUNCT TO (1 WORD - CLB) ;
SETPARENT:PUNCT PUNCT TO (1 CLB LINK -2 WORD) ;
	## Muhto go lassánedje olbmot, de bohte čáhppesbivttasolbmot fas dohko, gosa ledje sámit vuohččan ballán, ja dahke orohagaid jur dasa gos sámit ledje orrume, dan dihte go sii oidne, ahte das leai čáppa gieddi, maid ledje bohccot dutken, gožžan ja baikán — gos ledje sámit orron mánga olmmošbuolvva.
	## Eai olbmot gale jáhke daid rokkiid, ahte dat leat leamaš olbmuid dahkan rokkit daihe goađit; muhto dat leat gávdnojuvvon mánga mearkka dasa - dollasajit, suovvamuorra ja okta njiskun.
SETPARENT:CITATION CITATION TO (-1 VFIN) ;
SETPARENT:CITATION CITATION TO (1 VFIN) ;
	## Ja jiehtanas dadjá: "Mon lean juo addán čalmmi."
SETPARENT:RIGHT RIGHT TO (-1 VFIN) ;
SETPARENT:LEFT LEFT TO (1 VFIN) ;

SETPARENT:missingToRoot @X (NONE p (*)) TO (@0 (*));
#SETPARENT:X (@X) TO (-1 (*)) ; #Hva skal vi gjøre med X?

AFTER-SECTIONS
SETPARENT:tomissingVerb (@ADVL) TO (*1 @X) ;
SETPARENT:tomissingVerb (@ADVL) TO (*-1 @X) ;


#Removing tags for output
SUBSTITUTE (<mv>) (*) TARGET (<mv>) ;
SUBSTITUTE (<aux>) (*) TARGET (<aux>) ;
SUBSTITUTE (<vdic>) (*) TARGET (<vdic>) ;
SUBSTITUTE (<ehead>) (*) TARGET (<ehead>) ;
SUBSTITUTE (<ctjHead>) (*) TARGET (<ctjHead>) ;
SUBSTITUTE (TV*) (*) TARGET (TV*) ;
SUBSTITUTE (IV*) (*) TARGET (IV*) ;



#SUBSTITUTE (@<ADVL) (@<ADVL-Ill) TARGET (Ill) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Ill) TARGET (Ill) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Loc) TARGET (Loc) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Loc) TARGET (Loc) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Com) TARGET (Com) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Com) TARGET (Com) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Acc) TARGET (Acc) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Acc) TARGET (Acc) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Gen) TARGET (Gen) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Gen) TARGET (Gen) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Ess) TARGET (Ess) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Ess) TARGET (Ess) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Nom) TARGET (Nom) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Nom) TARGET (Nom) ;
#SUBSTITUTE (@<ADVL) (@<ADVL-Adv) TARGET (Adv) ;
#SUBSTITUTE (@ADVL>) (@ADVL>-Adv) TARGET (Adv) ;
#
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Ill) TARGET (Ill) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Ill) TARGET (Ill) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Loc) TARGET (Loc) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Loc) TARGET (Loc) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Com) TARGET (Com) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Com) TARGET (Com) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Acc) TARGET (Acc) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Acc) TARGET (Acc) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Gen) TARGET (Gen) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Gen) TARGET (Gen) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Ess) TARGET (Ess) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Ess) TARGET (Ess) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Nom) TARGET (Nom) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Nom) TARGET (Nom) ;
#SUBSTITUTE (@-F<ADVL) (@-F<ADVL-Adv) TARGET (Adv) ;
#SUBSTITUTE (@-FADVL>) (@-FADVL>-Adv) TARGET (Adv) ;



    #=====#
      END #
    #=====#

# Procedure for creating 3 different versions for the fao testing
# 1. smirules:        language spec. tags added to sets   &  egrep -v '(:kal|faospectagrules|faospecsynrules)'
# 2. smifaotagsrules: rules added for language spec. tags &  egrep -v '(:kal|faospecsynrules)'
# 3. smifaorules:     language specific synt. rules added &  egrep -v '(:kal)'

# 1. kjøring - kun SUBSTITUTE:fao_sum_id=Rel (CS) (<cs> Rel) TARGET ("sum" CS) OR ("ið" CS) ;
# 2. kjøring - dessuten faospectagrules
# 3. kjøring - både faospectagrules og faospecsynrules
