#!/bin/bash

if ! test $# -eq 2 ; then
    echo
    echo "Usage: $0 OUTFILE FSAFILE"
    echo
    echo "OUTFILE is the regex file to be created"
    echo "FSAFILE is the file with alphabet containing NFD coded unicode arcs"
    echo
    exit 1
fi

REGEXFILE="$1"
FSAFILE="$2"

# Print header text:
echo "# This is a generated file - do not edit!"        > "$REGEXFILE"
echo "# It recodes NFD coded symbols to NFC"           >> "$REGEXFILE"
echo "# (this allows linguists to use NFD in source "  >> "$REGEXFILE"
echo "#  we use NFC in tools and automata) "           >> "$REGEXFILE"
echo ""                                                >> "$REGEXFILE"

@HFST_SUMMARISE@ "$FSAFILE" -v |\
    grep -F -A 1 "sigma set:" |\
    tail -n 1 |\
    tr , '\n' |\
    @SED@ -e 's/^ //'  |\
    grep -E -v '^[+{@}^]' > "$REGEXFILE".sigma.nfd
@UCONV@ -f utf8 -x any-nfc "$REGEXFILE".sigma.nfd > "$REGEXFILE".sigma.nfc
paste "$REGEXFILE".sigma.nfd "$REGEXFILE".sigma.nfc |\
    @AWK@ '$1 != $2 {printf("%s -> {%s},\n", $1, $2);
#    printf("%s -> ", $1);
#    for (i = 1; i <= length($2); i++) {
#        printf("%s ", substr($2, i, 1));
#    }
#    printf(",\n");
}' >> "$REGEXFILE"
echo "X -> X ;" >> "$REGEXFILE"
